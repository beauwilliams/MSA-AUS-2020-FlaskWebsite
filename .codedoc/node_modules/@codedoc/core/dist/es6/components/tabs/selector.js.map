{"version":3,"file":"selector.js","sourceRoot":"","sources":["../../../../src/components/tabs/selector.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,EAA+B,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACpF,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAG5C,MAAM,UAAU,WAAW,CAAsB,CAAM,EAAE,QAAgC;IAGvF,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;IACvB,MAAM,QAAQ,GAAG,KAAK,EAAE,CAAC;IAEzB,MAAM,MAAM,GAAG,GAAG,EAAe,CAAC;IAElC,IAAI,CAAC,KAAK,CAAC;QACT,IAAI;;YACF,QAAQ,CAAC,IAAI,EAAE,CAAC;YAChB,MAAM,KAAK,GAAe,EAAE,CAAC;YAC7B,MAAA,MAAM,CAAC,CAAC,CAAC,aAAa,0CAAE,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC9D,KAAK,CAAC,IAAI,CAAC;oBACT,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,EAAE;oBAChD,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE;oBAC1C,GAAG,EAAE,IAAmB;oBACxB,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,SAAS;iBACtD,CAAC,CAAC;gBACH,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC;oBACrC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;YACzD,CAAC,EAAE;YAEH,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;KACF,CAAC,CAAC;IAEH,OAAO,yBAAK,KAAK,EAAC,UAAU,EAAC,IAAI,EAAE,MAAM;QACvC,gBAAC,IAAI,IAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE,CAC1B,4BAAQ,KAAK,EAAE,UAAU,CAAC,EAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,oBACxE,GAAG,CAAC,KAAK,CAAC,KAAK,iBAClB,GAAG,CAAC,KAAK,CAAC,EAAE,EACzB,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAa,EAAE,EAAE;wBACnC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBACvC,CAAC,CAAC,CAAC;oBAEH,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACxC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;gBAChC,CAAC;gBACE,GAAG,CAAC,KAAK,CAAC,KAAK;gBACf,GAAG,CAAC,KAAK,CAAC,IAAI,CAAA,CAAC,CAAA,0BAAM,KAAK,EAAC,WAAW,IAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAQ,CAAA,CAAC,CAAA,EAAE,CAC3D,GACX,CACE,CAAC;AACT,CAAC;AAGD,MAAM,CAAC,MAAM,YAAY,GAAG,aAAa,CAAA,SAAS,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import { transport } from '@connectv/sdh/transport';\nimport { RendererLike, ComponentThis, List, toggleList, ref } from '@connectv/html';\nimport { state, map } from '@connectv/core';\n\n\nexport function TabSelector(this: ComponentThis, _: any, renderer: RendererLike<any, any>) {\n  type _TabType = { title: string; id: string; el$: HTMLElement; icon?: string };\n\n  const tabs = state([]);\n  const selected = state();\n\n  const holder = ref<HTMLElement>();\n\n  this.track({\n    bind() {\n      selected.bind();\n      const _tabs: _TabType[] = [];\n      holder.$.parentElement?.querySelectorAll('.tab').forEach(tab$ => {\n        _tabs.push({ \n          title: tab$.getAttribute('data-tab-title') || '', \n          id: tab$.getAttribute('data-tab-id') || '',\n          el$: tab$ as HTMLElement,\n          icon: tab$.getAttribute('data-tab-icon') || undefined,\n        });\n        if (tab$.classList.contains('selected'))\n          selected.value = tab$.getAttribute('data-tab-title');\n      });\n\n      tabs.bind();\n      tabs.value = _tabs;\n    }\n  });\n\n  return <div class=\"selector\" _ref={holder}>\n    <List of={tabs} each={tab => \n      <button class={toggleList({selected: selected.to(map((s: string) => s === tab.value.id))})}\n        data-tab-title={tab.value.title}\n        data-tab-id={tab.value.id}\n        onclick={() => {\n          tabs.value.forEach((tab: _TabType) => {\n            tab.el$.classList.remove('selected');\n          });\n\n          tab.value.el$.classList.add('selected');\n          selected.value = tab.value.id;\n        }}>\n          {tab.value.title}\n          {tab.value.icon?<span class=\"icon-font\">{tab.value.icon}</span>:''}\n        </button>}\n    />\n  </div>;\n}\n\n\nexport const TabSelector$ = /*#__PURE__*/transport(TabSelector);\n"]}