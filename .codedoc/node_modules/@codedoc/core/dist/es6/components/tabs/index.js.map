{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/tabs/index.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC;AACpC,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAW1C,MAAM,UAAU,GAAG,CAAC,OAAmB,EAAE,QAAgC,EAAE,OAAY;IACrF,MAAM,IAAI,GAAG,yBAAK,KAAK,EAAC,KAAK,oBACK,OAAO,CAAC,KAAK,IAAI,EAAE,iBACtB,OAAO,CAAC,EAAE,IAAI,OAAO,CAAC,KAAK,IAAI,EAAE,IAAG,OAAO,CAAO,CAAC;IAElF,IAAI,OAAO,CAAC,QAAQ;QAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACrD,IAAI,OAAO,CAAC,IAAI;QAAE,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;IAEnE,OAAO,IAAI,CAAC;AACd,CAAC;AAGD,MAAM,UAAU,IAAI,CAElB,CAAM,EACN,QAAgC,EAChC,OAAY;IAEZ,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAE9C,MAAM,MAAM,GAAG,kCAAW,OAAO,CAAY,CAAC;IAE9C,IAAI,MAA+B,CAAC;IACpC,IAAI,SAAkC,CAAC;IAEvC,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QAC9C,MAAM,IAAI,GAAG,KAAoB,CAAC;QAElC,IAAI,CAAC,MAAM;YAAE,MAAM,GAAG,IAAI,CAAC;QAC3B,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACvC,IAAI,SAAS;gBAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;;gBAC5C,SAAS,GAAG,IAAI,CAAC;SACvB;IACH,CAAC,CAAC,CAAC;IAEH,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE;IAC/B,IAAI,CAAC,SAAS;QAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE;IAElD,OAAO,yBAAK,KAAK,EAAE,OAAO,CAAC,IAAI;QAC7B,gBAAC,YAAY,OAAE;QACd,MAAM,CACH,CAAA;AACR,CAAC;AAGD,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC","sourcesContent":["import { RendererLike } from '@connectv/html';\nimport { ThemedComponentThis } from '@connectv/jss-theme';\n\nimport { CodedocTheme } from '../../theme';\n\nimport { TabsStyle } from './style';\nimport { TabSelector$ } from './selector';\n\n\nexport interface TabOptions {\n  selected?: boolean;\n  title?: string;\n  icon?: string;\n  id?: string;\n}\n\n\nexport function Tab(options: TabOptions, renderer: RendererLike<any, any>, content: any) {\n  const $tab = <div class=\"tab\" \n                    data-tab-title={options.title || ''} \n                    data-tab-id={options.id || options.title || ''}>{content}</div>;\n\n  if (options.selected) $tab.classList.add('selected');\n  if (options.icon) $tab.setAttribute('data-tab-icon', options.icon);\n\n  return $tab;\n}\n\n\nexport function Tabs(\n  this: ThemedComponentThis<CodedocTheme>,\n  _: any, \n  renderer: RendererLike<any, any>,\n  content: any\n) {\n  const classes = this.theme.classes(TabsStyle);\n\n  const holder = <fragment>{content}</fragment>;\n\n  let first$: HTMLElement | undefined;\n  let selected$: HTMLElement | undefined;\n\n  holder.querySelectorAll('.tab').forEach(_tab$ => {\n    const tab$ = _tab$ as HTMLElement;\n\n    if (!first$) first$ = tab$;\n    if (tab$.classList.contains('selected')) {\n      if (selected$) tab$.classList.remove('selected');\n      else selected$ = tab$;\n    }\n  });\n\n  first$?.classList.add('first');\n  if (!selected$) first$?.classList.add('selected');\n\n  return <div class={classes.tabs}>\n    <TabSelector$/>\n    {holder}\n  </div>\n}\n\n\nexport { TabsStyle } from './style';"]}