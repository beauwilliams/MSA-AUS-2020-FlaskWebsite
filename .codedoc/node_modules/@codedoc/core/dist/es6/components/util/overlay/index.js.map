{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/components/util/overlay/index.tsx"],"names":[],"mappings":"AAGA,MAAM,KAAK,GAAG,aAAa,CAAA;;;;;;;;;;;;;;;CAe1B,CAAC;AAOF,MAAM,UAAU,OAAO,CAAsB,OAAuB,EAAE,QAAgC,EAAE,OAAY;IAClH,MAAM,UAAU,GACd,yBAAK,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,CAAA;YAAE,IAAI,EAAE,CAAA,CAAC,CAAC;QAChE,yBAAK,KAAK,EAAC,+GAA+G,IACvH,OAAO,CACJ,CACF,CAAC;IAET,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;IAClD,MAAM,IAAI,GAAG,GAAG,EAAE;QAChB,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;QAC/B,UAAU,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAI,CAAC,KAAK,CAAC;QACT,IAAI;YACF,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACrB,IAAI,CAAC,CAAC,gBAAgB,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,yBAAyB,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;gBAC/F,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,uBAAuB,CAAC;aACvD;QACH,CAAC;KACF,CAAC,CAAC;IAEH,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import { RendererLike, ComponentThis } from '@connectv/html';\n\n\nconst style = /*#__PURE__*/`\n  position: fixed;\n  z-index: 1000;\n  left: 0; right: 0; top: 0; bottom: 0;\n  cursor: pointer;\n  background: rgba(64, 64, 64, .65);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 48px;\n  color: white;\n  opacity: 0;\n  transition: opacity .1s;\n  backdrop-filter: blur(16px);\n  -webkit-backdrop-filter: blur(16px);\n`;\n\nexport interface OverlayOptions {\n  sticky?: boolean;\n}\n\n\nexport function Overlay(this: ComponentThis, options: OverlayOptions, renderer: RendererLike<any, any>, content: any) {\n  const container$ = \n    <div style={style} onclick={() => { if (!options?.sticky) hide() }}>\n      <div style='text-align: center; max-width: calc(75vw - 32px);max-height: calc(75vh - 32px); overflow: auto; padding: 16px'>\n        {content}\n      </div>\n    </div>;\n\n  const show = () => container$.style.opacity = '1';\n  const hide = () => {\n    container$.style.opacity = '0';\n    setTimeout(() => container$.remove(), 100);\n  };\n  \n  this.track({\n    bind() {\n      setTimeout(show, 10);\n      if (!('backdropFilter' in container$.style) && !('-webkit-backdrop-filter' in container$.style)) {\n        container$.style.background = 'rgba(64, 64, 64, .95)';\n      }\n    }\n  });\n\n  return container$;\n}\n"]}