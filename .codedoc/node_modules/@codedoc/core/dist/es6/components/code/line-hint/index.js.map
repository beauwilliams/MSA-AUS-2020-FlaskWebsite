{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/components/code/line-hint/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,MAAM,CAAC;AAC1C,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAEjE,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC1D,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAGtC,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC;IAC9B,+BAA+B;IAC/B,mCAAmC;IACnC,6BAA6B;IAC7B,qCAAqC;CACtC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAGzC,MAAM,UAAU,WAAW;IACzB,OAAO,CAAC,GAAG,EAAE;QACX,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;QAC/B,MAAM,MAAM,GAAG,IAAI,OAAO,EAA2B,CAAC;QAEtD,QAAQ,CAAC,MAAM,CAAC,gBAAC,OAAO,IAAC,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAE9D,MAAM,KAAK,GAAG,GAAG,EAAE;YACjB,QAAQ,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACxD,IAAI,IAAI,GAAG,EAAE,CAAC;gBACd,IAAI,KAA8B,CAAC;gBACnC,KAAK,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oBAC1D,MAAM,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;oBAC5D,IAAI,KAAK,EAAE;wBACT,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;wBAC3C,IAAI,IAAI;4BAAE,KAAK,GAAG,QAAuB,CAAC;qBAC3C;gBACH,CAAC,CAAC,CAAC;gBAEH,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,EAAE;oBAC5B,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;oBAC3B,KAAK,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;oBACtC,SAAS,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAoB,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;oBACnF,SAAS,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBACzE;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAA;QAED,KAAK,EAAE,CAAC;QAAC,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC;AAGD,MAAM,CAAC,MAAM,cAAc,GAAG,aAAa,CAAA,aAAa,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import { Subject, fromEvent } from 'rxjs';\nimport { mapTo } from 'rxjs/operators';\nimport { funcTransport, onReady } from '@connectv/sdh/transport';\n\nimport { getRenderer } from '../../../transport/renderer';\nimport { HintBox } from './component';\n\n\nconst commentRegex = new RegExp([\n  /\\/\\/\\s?\\-\\-\\>\\s*(.*[^\\s])\\s*$/,       // --> single line comments\n  /\\/\\*\\s?\\-\\-\\>\\s*(.*[^\\s])\\s*\\*\\/$/,   // --> multi line comments\n  /\\#\\s?\\-\\-\\>\\s*(.*[^\\s])\\s*$/,         // --> python comments\n  /\\<\\!\\-\\-\\s?\\>\\s*(.*[^\\s])\\s*\\-\\-\\>$/, // --> html comments\n].map(r => `(?:${r.source})`).join('|'));\n\n\nexport function initHintBox() {\n  onReady(() => {\n    const renderer = getRenderer();\n    const target = new Subject<HTMLElement | undefined>();\n  \n    renderer.render(<HintBox target={target}/>).on(document.body);\n\n    const _exec = () => {\n      document.querySelectorAll('pre>code>div').forEach(line$ => {\n        let hint = ''; \n        let hint$: HTMLElement | undefined;\n        line$.querySelectorAll('.token.comment').forEach(comment$ => {\n          const match = commentRegex.exec(comment$.textContent || '');\n          if (match) {\n            hint = match.slice(1).find(_ => _) || hint;\n            if (hint) hint$ = comment$ as HTMLElement;\n          }\n        });\n  \n        if (hint.length > 0 && hint$) {\n          hint$.style.opacity = '.5';\n          line$.setAttribute('data-hint', hint);\n          fromEvent(line$, 'mouseenter').pipe(mapTo(line$ as HTMLElement)).subscribe(target);\n          fromEvent(line$, 'mouseleave').pipe(mapTo(undefined)).subscribe(target);\n        }\n      });\n    }\n\n    _exec(); window.addEventListener('navigation', _exec);\n  });\n}\n\n\nexport const codeLineHints$ = /*#__PURE__*/funcTransport(initHintBox);\n"]}