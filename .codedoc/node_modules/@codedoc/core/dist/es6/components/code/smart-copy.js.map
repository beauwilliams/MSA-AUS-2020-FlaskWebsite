{"version":3,"file":"smart-copy.js","sourceRoot":"","sources":["../../../../src/components/code/smart-copy.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAC5D,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAG7C,SAAS,WAAW,CAAC,OAAgB;IACnC,IAAI,OAAO,CAAC,sBAAsB,EAAE;QAClC,MAAM,OAAO,GAAG,OAAO,CAAC,sBAAsB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACzE,IAAI,OAAO;YAAE,OAAO,OAAsB,CAAC;QAE3C,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QAC5D,IAAI,OAAO;YAAE,OAAO,OAAO,CAAC;aACvB,IAAI,OAAO,CAAC,aAAa;YAAE,OAAO,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;KAC3E;IAED,IAAI,OAAO,CAAC,aAAa;QACvB,OAAO,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC9C,CAAC;AAGD,MAAM,UAAU,SAAS,CAAC,GAAgB,EAAE,IAAI,GAAG,KAAK;IACtD,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC9C,IAAI,OAAO,EAAE;QACX,MAAM,MAAM,GAAkB,EAAE,CAAC;QAEjC,IAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC7C,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE;gBAC/C,IAAI,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC;oBACtC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC;;YAEJ,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAEvE,eAAe,CACb,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAClE,GAAG,EAAE,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,CAC7B,CAAC;KACH;AACH,CAAC;AAGD,MAAM,UAAU,aAAa;IAC1B,MAAc,CAAC,SAAS,GAAG,SAAS,CAAC;AACxC,CAAC;AAGD,MAAM,CAAC,MAAM,UAAU,GAAG,aAAa,CAAA,aAAa,CAAC,aAAa,CAAC,CAAC","sourcesContent":["import { funcTransport } from '@connectv/sdh/transport';\nimport { copyToClipboard } from '../../transport/clipboard';\nimport { copyConfirm } from './copy-confirm';\n\n\nfunction _findTarget(anchor$: Element): HTMLElement | undefined {\n  if (anchor$.previousElementSibling) {\n    const nephew$ = anchor$.previousElementSibling.querySelector('pre>code');\n    if (nephew$) return nephew$ as HTMLElement;\n\n    const target$ = _findTarget(anchor$.previousElementSibling);\n    if (target$) return target$;\n    else if (anchor$.parentElement) return _findTarget(anchor$.parentElement);\n  }\n\n  if (anchor$.parentElement)\n    return _findTarget(anchor$.parentElement);\n}\n\n\nexport function smartCopy(el$: HTMLElement, self = false) {\n  const target$ = self ? el$ : _findTarget(el$);\n  if (target$) {\n    const lines$: HTMLElement[] = [];\n\n    if (target$.classList.contains('has-selection'))\n      target$.querySelectorAll('div').forEach((line$ => {\n        if (line$.classList.contains('selected'))\n          lines$.push(line$);\n      }));\n    else\n      target$.querySelectorAll('div').forEach(line$ => lines$.push(line$));\n\n    copyToClipboard(\n      lines$.map(line$ => line$.getAttribute('data-content')).join('\\n'),\n      () => copyConfirm(...lines$)\n    );\n  }\n}\n\n\nexport function initSmartCopy() {\n  (window as any).smartCopy = smartCopy;\n}\n\n\nexport const smartCopy$ = /*#__PURE__*/funcTransport(initSmartCopy);"]}