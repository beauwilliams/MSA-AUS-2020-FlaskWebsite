{"version":3,"file":"toc-highlight.js","sourceRoot":"","sources":["../../../../../src/components/page/toc/toc-highlight.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAEjE,OAAO,EAAE,mBAAmB,EAAE,MAAM,iCAAiC,CAAC;AAGtE,MAAM,UAAU,YAAY;IAC1B,mBAAmB,EAAE,CAAC;IAEtB,IAAI,QAAuC,CAAC;IAE5C,SAAS,uBAAuB,CAAC,GAAW;QAC1C,MAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QACpD,IAAI,GAAG,EAAE;YACP,IAAI,KAAoC,CAAC;YACzC,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBACrC,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;oBACnC,IAAI,CAAC,KAAK;wBAAE,KAAK,GAAG,EAAE,CAAC;oBACvB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBAC7B;;oBACI,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;YAEH,IAAI,KAAK,EAAE;gBACT,IAAI,KAAK,KAAK,QAAQ;oBAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,CAAC,IAAI,WAAW,CAAC,gBAAgB,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,EAAE;gBACpG,KAAK,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;gBAEvE,QAAQ,GAAG,KAAK,CAAC;aAClB;SACF;IACH,CAAC;IAED,OAAO,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,uBAAuB,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACjF,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,KAAK,CAAC,EAAE,CAAC,uBAAuB,CAAE,KAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3G,CAAC;AAGD,MAAM,CAAC,MAAM,aAAa,GAAG,aAAa,CAAA,aAAa,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import { funcTransport, onReady } from '@connectv/sdh/transport';\n\nimport { polyfillCustomEvent } from '../../../transport/custom-event';\n\n\nexport function tocHighlight() {\n  polyfillCustomEvent();\n\n  let current$: HTMLAnchorElement | undefined;\n\n  function highlightCurrentToCLink(url: string) {\n    const toc = document.getElementById('-codedoc-toc');\n    if (toc) {\n      let curr$: HTMLAnchorElement | undefined;\n      toc.querySelectorAll('a').forEach(a$ => {\n        if (a$.getAttribute('href') === url) {\n          if (!curr$) curr$ = a$;\n          a$.classList.add('current');\n        }\n        else a$.classList.remove('current');\n      });\n\n      if (curr$) {\n        if (curr$ !== current$) current$?.dispatchEvent(new CustomEvent('collapse-close', {bubbles: true}));\n        curr$.dispatchEvent(new CustomEvent('collapse-open', {bubbles: true}));\n\n        current$ = curr$;\n      }\n    }\n  }\n\n  onReady(() => setTimeout(() => highlightCurrentToCLink(location.pathname), 200));\n  window.addEventListener('navigation-start', event => highlightCurrentToCLink((event as any).detail.url));\n}\n\n\nexport const tocHighlight$ = /*#__PURE__*/funcTransport(tocHighlight);"]}