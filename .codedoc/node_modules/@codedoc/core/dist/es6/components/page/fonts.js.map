{"version":3,"file":"fonts.js","sourceRoot":"","sources":["../../../../src/components/page/fonts.tsx"],"names":[],"mappings":"AAwBA,MAAM,UAAU,KAAK,CAAC,OAAqB,EAAE,QAAgC;IAC3E,IAAI,CAAC,OAAO;QAAE,OAAO,GAAG,EAAE,CAAC;IAE3B,IAAI,CAAC,OAAO,CAAC,IAAI;QAAE,OAAO,CAAC,IAAI,GAAG;YAChC,IAAI,EAAE,MAAM;YACZ,GAAG,EAAE,mEAAmE;SACzE,CAAC;IACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ;QAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;IAEjE,IAAI,CAAC,OAAO,CAAC,IAAI;QAAE,OAAO,CAAC,IAAI,GAAG;YAChC,IAAI,EAAE,iBAAiB;YACvB,GAAG,EAAE,8EAA8E;SACpF,CAAA;IACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ;QAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,mCAAmC,CAAC;IAExF,IAAI,CAAC,OAAO,CAAC,IAAI;QAAE,OAAO,CAAC,IAAI,GAAG;YAChC,IAAI,EAAE,gBAAgB;YACtB,GAAG,EAAE,iFAAiF;SACvF,CAAC;IACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO;QAAE,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;IAElF,OAAO;QACL,0BAAM,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAC,YAAY,GAAG;QACjD,0BAAM,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAC,YAAY,GAAG;QACjD,0BAAM,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAC,YAAY,GAAE;QAEhD,+BAAQ;;wBAEY,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,OAAO,CAAC,IAAI,CAAC,QAAQ;;;;wBAI5C,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,OAAO,CAAC,IAAI,CAAC,QAAQ;;;;wBAI5C,OAAO,CAAC,IAAI,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;wBAyBjB,OAAO,CAAC,IAAI,CAAC,OAAO;;KAEvC,CAAS,CACD,CAAA;AACb,CAAC","sourcesContent":["import { RendererLike } from '@connectv/html';\n\n\nexport interface FontOptions {\n  url: string;\n  name: string;\n  fallback?: string;\n}\n\n\nexport interface IconFontOptions {\n  url: string;\n  name: string;\n  outline?: string;\n}\n\n\nexport interface FontsOptions {\n  text?: FontOptions;\n  code?: FontOptions;\n  icon?: IconFontOptions;\n}\n\n\nexport function Fonts(options: FontsOptions, renderer: RendererLike<any, any>) {\n  if (!options) options = {};\n\n  if (!options.text) options.text = {\n    name: 'Hind',\n    url: 'https://fonts.googleapis.com/css?family=Hind:400,700&display=swap',\n  };\n  if (!options.text.fallback) options.text.fallback = 'sans-serif';\n  \n  if (!options.code) options.code = {\n    name: 'Source Code Pro',\n    url: 'https://fonts.googleapis.com/css?family=Source+Code+Pro:300,400&display=swap',\n  }\n  if (!options.code.fallback) options.code.fallback = `'Courier New', Courier, monospace`;\n\n  if (!options.icon) options.icon = {\n    name: 'Material Icons',\n    url: 'https://fonts.googleapis.com/icon?family=Material+Icons|Material+Icons+Outlined'\n  };\n  if (!options.icon.outline) options.icon.outline = options.icon.name + ' Outlined';\n\n  return <fragment>\n    <link href={options.text.url} rel=\"stylesheet\" />\n    <link href={options.code.url} rel=\"stylesheet\" />\n    <link href={options.icon.url} rel=\"stylesheet\"/>\n\n    <style>{`\n      body, input, button {\n        font-family: '${options.text.name}', ${options.text.fallback};\n      }\n\n      code, .hljs {\n        font-family: '${options.code.name}', ${options.code.fallback};\n      }\n\n      .icon-font {\n        font-family: '${options.icon.name}';\n        font-weight: normal;\n        font-style: normal;\n        font-size: 24px;  /* Preferred icon size */\n        display: inline-block;\n        line-height: 1;\n        text-transform: none;\n        letter-spacing: normal;\n        word-wrap: normal;\n        white-space: nowrap;\n        direction: ltr;\n      \n        /* Support for all WebKit browsers. */\n        -webkit-font-smoothing: antialiased;\n        /* Support for Safari and Chrome. */\n        text-rendering: optimizeLegibility;\n      \n        /* Support for Firefox. */\n        -moz-osx-font-smoothing: grayscale;\n      \n        /* Support for IE. */\n        font-feature-settings: 'liga';\n      }\n\n      .icon-font.outline {\n        font-family: '${options.icon.outline}';\n      }\n    `}</style>\n  </fragment>\n}\n"]}