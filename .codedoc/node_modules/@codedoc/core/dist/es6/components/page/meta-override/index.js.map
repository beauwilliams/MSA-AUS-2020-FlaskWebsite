{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/components/page/meta-override/index.tsx"],"names":[],"mappings":"AAYA,MAAM,UAAU,YAAY,CAAC,OAA4B,EAAE,QAAgC,EAAE,OAAY;IACvG,MAAM,IAAI,GAA4B,EAAE,CAAC;IACzC,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,IAAI,CAAC,oBAAoB,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,6BAA6B,CAAC,GAAG,OAAO,CAAC,QAAQ,IAAI,SAAS,CAAC;KACrE;SAAM,IAAI,OAAO,CAAC,QAAQ,EAAE;QAC3B,IAAI,CAAC,6BAA6B,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC;KACxD;IAED,OAAO,uCAAK,MAAM,oCAAsB,IAAI,GAAG,OAAO,CAAO,CAAC;AAChE,CAAC","sourcesContent":["import { RendererLike } from '@connectv/html';\n\nimport { OverrideTarget, OverrideBehavior } from './types';\n\n\nexport interface MetaOverrideOptions {\n  target?: OverrideTarget,\n  behavior?: OverrideBehavior,\n  property?: string;\n}\n\n\nexport function MetaOverride(options: MetaOverrideOptions, renderer: RendererLike<any, any>, content: any) {\n  const opts: {[key: string]: string} = {};\n  if (options.target) {\n    opts['data-meta-override'] = options.target;\n    opts['data-meta-override-behavior'] = options.behavior || 'replace';\n  } else if (options.property) {\n    opts['data-meta-override-property'] = options.property;\n  }\n\n  return <div hidden data-ignore-text {...opts}>{content}</div>;\n}\n"]}