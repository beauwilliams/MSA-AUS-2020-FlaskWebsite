{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../../src/components/page/toc/search/post-nav/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import Color from 'color';\nimport { funcTransport } from '@connectv/sdh/transport';\n\nimport { getRenderer } from '../../../../../transport/renderer';\nimport { SearchSwitcher } from './switcher';\n\n\nexport function postNavSearch() {\n  let query: string | undefined = undefined;\n  let switcher$: HTMLElement;\n\n  window.addEventListener('on-navigation-search', (event: any) => {\n    query = event.detail.query;\n  });\n\n  window.addEventListener('navigation', () => {\n    if (query) setTimeout(() => {\n      search(query || '');\n      query = undefined;\n    }, 300);\n  });\n\n  window.addEventListener('same-page-navigation', () => {\n    if (query) search(query);\n    query = undefined;\n  });\n\n  const renderer = getRenderer();\n\n  function search(query: string) {\n    const q = query.toLowerCase();\n    const highlights$: HTMLElement[] = [];\n    const container$ = document.getElementById('-codedoc-container');\n    if (container$) {\n      const _scan = (el$: Node, query: RegExp) => {\n        if (el$ instanceof Text) {\n          const text = el$.textContent;\n          const _match = query.exec(text?.toLowerCase() || '');\n          if (text && _match) {\n            const matched = _match[0];\n            const before = text.substr(0, _match.index);\n            const match = text.substr(_match.index, matched.length);\n            const after = text.substr(_match.index + matched.length);\n\n            let color: Color<string> | string = Color(window.getComputedStyle(el$.parentElement as any).color);\n            if (color.saturationv() < .2) {\n              color = color.isLight() ? 'teal' : 'yellow';\n            }\n            else color = color.rotate(90).alpha(.35);\n\n            el$.textContent = after;\n            const before$ = document.createTextNode(before);\n            const match$ = <span data-no-search style={`\n                              background: ${color.toString()}; \n                              display: inline-block; \n                              vertical-align: middle;\n                              transform-origin: center;\n                              transition: transform .15s\n                              `}>{match}</span>;\n            highlights$.push(match$);\n            renderer.render(<fragment>{before$}{match$}</fragment>).before(el$);\n            _scan(before$, query);\n            _scan(el$, query);\n          }\n        }\n        else {\n          if (el$ instanceof HTMLElement && (el$.hasAttribute('data-no-search') || el$.classList.contains('icon-font')))\n            return;\n\n          el$.childNodes.forEach(n => _scan(n, query));\n        }\n      };\n\n      _scan(container$, new RegExp(q));\n\n      if (highlights$.length == 0) {\n        const split = q.split(' ');\n        if (split.length > 0) {\n          _scan(container$, new RegExp(split.join('\\\\s+.*\\\\s+')));\n          if (highlights$.length == 0) {\n            split.forEach(part => _scan(container$, new RegExp(part)));\n          }\n        }\n      }\n    }\n\n    if (switcher$) switcher$.remove();\n\n    switcher$ = <SearchSwitcher elements={highlights$} query={query}/>;\n    renderer.render(switcher$).on(document.body);\n  }\n\n  (window as any)._find = search;\n}\n\n\nexport const postNavSearch$ = /*#__PURE__*/funcTransport(postNavSearch);\n"]}