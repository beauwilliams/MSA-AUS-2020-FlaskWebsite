{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../src/components/button/button.tsx"],"names":[],"mappings":"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","sourcesContent":["import color from 'color';\nimport { RendererLike } from '@connectv/html';\nimport { ThemedComponentThis, themedStyle } from '@connectv/jss-theme';\n\nimport { CodedocTheme } from '../../theme';\n\n\nexport const ButtonStyle = /*#__PURE__*/themedStyle<CodedocTheme>(theme => ({\n  button: {\n    background: theme.light.primary,\n    color: theme.light.primaryContrast,\n    padding: '4px 16px',\n    outline: 'none',\n    cursor: 'pointer',\n    borderRadius: '3px',\n    border: `2px solid ${theme.light.primary}`,\n    minWidth: '96px',\n    height: '40px',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textDecoration: 'none',\n    fontSize: '16px',\n    margin: 8,\n    marginRight: 0,\n    verticalAlign: 'middle',\n\n    'body.dark-mode-animate &': {\n      transition: 'background .15s, color .15s, border-color .15s',\n    },\n\n    '&.icon': {\n      padding: 0,\n      minWidth: 0,\n      width: '40px',\n      fontSize: '24px',\n    },\n\n    '&[disabled]': {\n      background: color(theme.light.text).alpha(.35).toString(),\n      border: color(theme.light.text).alpha(.35).toString(),\n      color: theme.light.background,\n    },\n\n    'body.dark &': {\n      background: theme.dark.primary,\n      borderColor: theme.dark.primary,\n      color: theme.dark.primaryContrast,\n\n      '&[disabled]': {\n        background: color(theme.dark.text).alpha(.35).toString(),\n        border: color(theme.dark.text).alpha(.35).toString(),\n        color: theme.dark.background,\n      },\n    },\n\n    '@media (prefers-color-scheme: dark)': {\n      'body:not(.dark-mode-animate) &': {\n        background: theme.dark.primary,\n        borderColor: theme.dark.primary,\n        color: theme.dark.primaryContrast,\n\n      '&[disabled]': {\n        background: color(theme.dark.text).alpha(.35).toString(),\n        border: color(theme.dark.text).alpha(.35).toString(),\n        color: theme.dark.background,\n      },\n      }\n    },\n\n    '&:hover:not([disabled])': {\n      background: 'transparent',\n      color: theme.light.primary,\n      textDecoration: 'none',\n\n      'body.dark &': {\n        background: 'transparent',\n        color: theme.dark.primary,\n      },\n  \n      '@media (prefers-color-scheme: dark)': {\n        'body:not(.dark-mode-animate) &': {\n          background: 'transparent',\n          color: theme.dark.primary,\n        }\n      },\n    },\n  },\n\n  '@global': {\n    a: {\n      '&$button': {\n        height: '28px',\n        '&.icon': { height: '36px', width: '36px' }\n      }\n    }\n  }\n}));\n\n\nexport interface ButtonOptions {\n  url?: string;\n  onclick?: string;\n  label: string;\n  icon?: string;\n}\n\n\nexport function Button(\n  this: ThemedComponentThis<CodedocTheme>,\n  options: ButtonOptions,\n  renderer: RendererLike<any, any>,\n) {\n  const classes = this.theme.classes(ButtonStyle);\n  let _class = classes.button;\n  if (options.icon === 'true') _class += ' icon icon-font';\n\n\n  if (options.url)\n    return <a class={_class}\n              href={options.url}\n              {...(\n                (\n                  options.url.startsWith('/')\n                  || options.url.startsWith('#')\n                )? {} : {target: '_blank'})}>\n              {options.label || ''}\n           </a>\n  else\n    return <button class={_class} onclick={options.onclick || ''}>{options.label || ''}</button>\n}\n"]}