{"version":3,"file":"init.js","sourceRoot":"","sources":["../../../../../src/components/misc/gitter/init.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAS,MAAM,gBAAgB,CAAC;AAE9C,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC1D,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAGxC,MAAM,UAAU,UAAU,CAAC,IAAY;IACrC,IAAI,CAAE,MAAc,CAAC,MAAM,EAAE;QAC3B,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;QAC/B,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAM,KAAK,GAAG,gBAAC,YAAY,IAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC;QAEzD,CAAC,CAAE,MAAc,CAAC,MAAM,GAAG,EAAS,CAAC,CAAC,IAAI,GAAG,EAAS,CAAC,CAAC,OAAO,GAAG;YAChE,IAAI;YACJ,iBAAiB,EAAE,KAAK;YACxB,aAAa,EAAE,KAAK;SACrB,CAAC;QAED,MAAc,CAAC,WAAW,GAAG,MAAM,CAAC;QACrC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,wBAAC,cAAc,EAAE,0CAAE,UAAU,CAAC,IAAI,IAAC,CAAC,CAAC;QAE7D,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzC,QAAQ,CAAC,MAAM,CAAC,4BAAQ,GAAG,EAAC,8CAA8C,EAAC,KAAK,QAAC,KAAK,SAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC7G;AACH,CAAC;AAGD,MAAM,UAAU,cAAc;;IAC5B,aAAQ,MAAc,CAAC,MAAM,CAAC,IAAI,0CAAE,WAAW,CAAC;AAClD,CAAC;AAGD,MAAM,UAAU,WAAW;IACzB,IAAI,cAAc,EAAE;QAAE,OAAQ,MAAc,CAAC,WAAW,CAAC;AAC3D,CAAC","sourcesContent":["import { state, State } from '@connectv/core';\n\nimport { getRenderer } from '../../../transport/renderer';\nimport { GitterHolder } from './holder';\n\n\nexport function initGitter(room: string) {\n  if (!(window as any).gitter) {\n    const renderer = getRenderer();\n    const _state = state(false);\n    const host$ = <GitterHolder state={_state} room={room}/>;\n\n    (((window as any).gitter = {} as any).chat = {} as any).options = {\n      room,\n      activationElement: false,\n      targetElement: host$,\n    };\n\n    (window as any).gitterState = _state;\n    _state.subscribe(open => gitterInstance()?.toggleChat(open));\n\n    renderer.render(host$).on(document.body);\n    renderer.render(<script src=\"https://sidecar.gitter.im/dist/sidecar.v1.js\" async defer/>).on(document.head);\n  }\n}\n\n\nexport function gitterInstance() {\n  return (window as any).gitter.chat?.defaultChat;\n}\n\n\nexport function gitterState(): State | undefined {\n  if (gitterInstance()) return (window as any).gitterState;\n}\n"]}