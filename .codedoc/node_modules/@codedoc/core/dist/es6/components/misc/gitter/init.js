import { state } from '@connectv/core';
import { getRenderer } from '../../../transport/renderer';
import { GitterHolder } from './holder';
export function initGitter(room) {
    if (!window.gitter) {
        const renderer = getRenderer();
        const _state = state(false);
        const host$ = renderer.create(GitterHolder, { state: _state, room: room });
        ((window.gitter = {}).chat = {}).options = {
            room,
            activationElement: false,
            targetElement: host$,
        };
        window.gitterState = _state;
        _state.subscribe(open => { var _a; return (_a = gitterInstance()) === null || _a === void 0 ? void 0 : _a.toggleChat(open); });
        renderer.render(host$).on(document.body);
        renderer.render(renderer.create("script", { src: "https://sidecar.gitter.im/dist/sidecar.v1.js", async: true, defer: true })).on(document.head);
    }
}
export function gitterInstance() {
    var _a;
    return (_a = window.gitter.chat) === null || _a === void 0 ? void 0 : _a.defaultChat;
}
export function gitterState() {
    if (gitterInstance())
        return window.gitterState;
}
//# sourceMappingURL=init.js.map