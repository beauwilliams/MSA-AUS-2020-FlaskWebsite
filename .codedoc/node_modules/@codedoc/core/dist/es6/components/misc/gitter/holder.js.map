{"version":3,"file":"holder.js","sourceRoot":"","sources":["../../../../../src/components/misc/gitter/holder.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AAStC,MAAM,UAAU,YAAY,CAE1B,EAAE,KAAK,EAAE,IAAI,EAAuB,EACpC,QAAgC;IAEhC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAChD,OAAO,yBAAK,KAAK,EAAE,GAAG,OAAO,CAAC,MAAM,eAAe;QACjD,yBAAK,KAAK,EAAC,SAAS;YAClB,uBAAG,KAAK,EAAC,WAAW,EAAC,IAAI,EAAE,qBAAqB,IAAI,EAAE,EAAE,MAAM,EAAC,QAAQ,kBAAgB;YACvF,uBAAG,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,YAAW,CACrE,CACF,CAAC;AACT,CAAC","sourcesContent":["import { State } from '@connectv/core';\nimport { RendererLike } from '@connectv/html';\nimport { ThemedComponentThis } from '@connectv/jss-theme';\n\nimport { CodedocTheme } from '../../../theme';\nimport { GitterStyle } from './style';\n\n\nexport interface GitterHolderOptions {\n  state: State,\n  room: string,\n}\n\n\nexport function GitterHolder(\n  this: ThemedComponentThis<CodedocTheme>,\n  { state, room }: GitterHolderOptions,\n  renderer: RendererLike<any, any>\n) {\n  const classes = this.theme.classes(GitterStyle);\n  return <div class={`${classes.holder} is-collapsed`}>\n    <div class=\"toolbar\">\n      <a class=\"icon-font\" href={`https://gitter.im/${room}`} target=\"_blank\">open_in_new</a>\n      <a class=\"icon-font\" onclick={() => state.value = !state.value}>close</a>\n    </div>\n  </div>;\n}\n"]}