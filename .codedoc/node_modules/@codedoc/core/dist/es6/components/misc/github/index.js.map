{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/components/misc/github/index.tsx"],"names":[],"mappings":"AAEA,OAAO,EAAoB,WAAW,EAAE,MAAM,SAAS,CAAC;AACxD,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAGtC,SAAS,YAAY,CAAC,OAAyB;IAC7C,OAAO,kBAAkB,OAAO,CAAC,KAAK,KAAK,MAAM,CAAA,CAAC,CAAA,MAAM,CAAA,CAAC,CAAA,OAAO,GAAG;QAC7D,WAAW,OAAO,CAAC,UAAU,KAAK,MAAM,CAAA,CAAC,CAAA,MAAM,CAAA,CAAC,CAAA,OAAO,GAAG;QAC1D,UAAU,OAAO,CAAC,SAAS,KAAK,OAAO,CAAA,CAAC,CAAA,OAAO,CAAA,CAAC,CAAA,MAAM,GAAG,CAAA;AACjE,CAAC;AAGD,SAAS,MAAM,CAAC,GAAiC,IAAI,OAAO,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,MAAM,CAAA,CAAC,CAAC;AAG5F,MAAM,UAAU,YAAY,CAAC,OAAyB,EAAE,QAAgC;IACtF,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;IACpC,OAAO;QACL,4BAAQ,KAAK,QAAC,KAAK,QAAC,GAAG,EAAC,sCAAsC,GAAE;QAChE,uBAAG,KAAK,EAAC,eAAe,uBACK,YAAY,CAAC,OAAO,CAAC,eAC7B,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA,CAAC,CAAA,KAAK,CAAA,CAAC,CAAA,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,IAAI,KAAK,CAAC,qBACtE,WAAW,CAAC,OAAO,CAAC,CAAA,CAAC,CAAA,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,CAAC,CAAA,MAAM,CAAA,CAAC,CAAA,KAAK,CAAC,CAAA,CAAC,CAAA,KAAK,eACrE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,CAAC,CAAA,OAAO,CAAA,CAAC,CAAA,KAAK,EAC9C,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,IACjC,OAAO,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CACzC,CACK,CAAC;AACd,CAAC;AAGD,cAAc,SAAS,CAAC;AACxB,cAAc,UAAU,CAAC","sourcesContent":["import { RendererLike } from '@connectv/html';\n\nimport { GithubBtnOptions, isCountable } from './types';\nimport { defaults } from './defaults';\n\n\nfunction schemeString(options: GithubBtnOptions) {\n  return `no-preference: ${options.color === 'Dark'?'dark':'light'};` +\n        ` light: ${options.colorLight === 'Dark'?'dark':'light'};` +\n        ` dark: ${options.colorDark === 'Light'?'light':'dark'};`\n}\n\n\nfunction isTrue(val: boolean | string | undefined) { return val === true || val === 'true' }\n\n\nexport function GithubButton(options: GithubBtnOptions, renderer: RendererLike<any, any>) {\n  const _defaults = defaults(options);\n  return <fragment>\n    <script async defer src=\"https://buttons.github.io/buttons.js\"/>\n    <a class=\"github-button\"\n              data-color-scheme={schemeString(options)}\n              data-icon={isTrue(options.standardIcon)?false:(options.icon || _defaults.icon || false)}\n              data-show-count={isCountable(options)?(isTrue(options.count)?'true':false):false}\n              data-size={isTrue(options.large)?'large':false}\n              href={options.link || _defaults.link}>\n                {options.label || _defaults.label}\n    </a>\n  </fragment>;\n}\n\n\nexport * from './types';\nexport * from './search';"]}