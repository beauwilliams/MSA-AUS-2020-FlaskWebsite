import { renderToString } from 'katex';
import { FormulaStyle } from './style';
export function Formula(options, renderer, content) {
    const classes = this.theme.classes(FormulaStyle);
    const marker = renderer.create("div", null, content);
    const holder = renderer.create("div", { class: classes.formula
            + ` ${options && options.align === 'center' ? 'center' : ''}`
            + ` ${options && options.size === 'large' ? 'big' : ''}` });
    marker.childNodes.forEach((child, index) => {
        let formula = '';
        if (child instanceof HTMLPreElement && child.querySelector('[data-content]')) {
            child.querySelectorAll('[data-content]').forEach(l$ => {
                formula += l$.getAttribute('data-content');
            });
        }
        else
            formula = child.textContent || '';
        formula = formula.trim();
        const line$ = renderer.create("div", { "data-formula": formula, class: classes.line, _innerHTML: renderToString(formula) });
        renderer.render(renderer.create("span", { class: "counter" }, index + 1)).on(line$);
        renderer.render(line$).on(holder);
    });
    return holder;
}
//# sourceMappingURL=component.js.map