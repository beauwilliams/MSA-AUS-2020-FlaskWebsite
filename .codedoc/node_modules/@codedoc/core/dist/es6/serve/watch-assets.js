import watch from 'node-watch';
import { join } from 'path';
import { Subject } from 'rxjs';
import { debounceTime, filter } from 'rxjs/operators';
import { StatusBuildingResponse } from './config';
const ASSET_EXTENSIONS = [
    '.jpg', '.jpeg', '.png', '.gif', '.svg', '.webp',
    '.woff', '.woff2', '.ttf', '.otf', '.eot',
    '.css' // --> stylesheets
];
export function watchAssets(root, config, state) {
    const change$ = new Subject();
    watch(join(root, config.dest.assets), {
        recursive: true,
        filter: f => ASSET_EXTENSIONS.some(extension => f.toLowerCase().endsWith(extension))
    }, (_, filename) => change$.next(filename));
    return change$.pipe(debounceTime(10), filter(() => state.value.status !== StatusBuildingResponse));
}
//# sourceMappingURL=watch-assets.js.map