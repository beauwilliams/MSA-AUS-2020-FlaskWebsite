{"version":3,"file":"markdown.type.js","sourceRoot":"","sources":["../../../src/config/markdown.type.ts"],"names":[],"mappings":"","sourcesContent":["import { PartialOptions as MarkdownOptions, ComponentMap } from '@connectv/marked';\n\n/**\n *\n * Denotes configuration for parsing markdown into HTML elements.\n *\n */\nexport interface MarkdownConfig extends MarkdownOptions<any, any> {\n\n  /**\n   *\n   * A component map for custom components.\n   *\n   * **WARNING**: since a lot of features of codedoc come from its custom markdown\n   * components, it is highly recommended to extend the default custom components\n   * for adding your own components:\n   *\n   * ```tsx\n   * import { configuration, DefaultConfig } from '@codedoc/core';\n   * \n   * export const config = configuration({\n   *   markdown: {\n   *      customComponents: {\n   *        ...DefaultConfig.markdown.customComponents,\n   *        MyComponent,\n   *      }\n   *   },\n   *   tocMarkdown: {\n   *     customComponents: {\n   *       ...DefaultConfig.tocMarkdown.customComponents,\n   *       MyToCComponent,\n   *     }\n   *   }\n   * });\n   * ```\n   *\n   */\n  customComponents: ComponentMap;\n\n  /**\n   *\n   * A component map for custom inline components.\n   *\n   * **WARNING**: since some of features of codedoc come from its custom inline markdown\n   * components, it is highly recommended to extend the default custom inline components\n   * for adding your own components:\n   *\n   * ```tsx\n   * import { configuration, DefaultConfig } from '@codedoc/core';\n   * \n   * export const config = configuration({\n   *   markdown: {\n   *      customInlineComponents: {\n   *        ...DefaultConfig.markdown.customInlineComponents,\n   *        MyComponent,\n   *      }\n   *   },\n   *   tocMarkdown: {\n   *     customInlineComponents: {\n   *       ...DefaultConfig.tocMarkdown.customInlineComponents,\n   *       MyToCComponent,\n   *     }\n   *   }\n   * });\n   * ```\n   *\n   */\n  customInlineComponents: ComponentMap;\n}\n"]}