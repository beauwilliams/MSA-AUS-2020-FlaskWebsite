"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
function attachPromise(host, promise) {
    if (host instanceof DocumentFragment) {
        var marker = getLSMarker(host);
        if (!marker)
            attachPromise(addLSMarker(host), promise);
    }
    else
        (host.__promises = host.__promises || []).push(promise);
}
exports.attachPromise = attachPromise;
function promises(node) {
    var childPromises = [];
    node.childNodes.forEach(function (child) { return childPromises = childPromises.concat(promises(child)); });
    return (node.__promises || []).concat(childPromises);
}
exports.promises = promises;
function isReady(node) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, Promise.all(promises(node))];
                case 1:
                    _a.sent();
                    return [2 /*return*/, true];
            }
        });
    });
}
exports.isReady = isReady;
exports.WRCallbackDefaultPriority = 0;
exports.WRCallbackHighPriority = 1000;
function whenRendered(node, cb, priority) {
    if (priority === void 0) { priority = exports.WRCallbackDefaultPriority; }
    if (node instanceof DocumentFragment) {
        var marker = getLSMarker(node);
        if (!marker)
            whenRendered(addLSMarker(node), cb);
    }
    else
        (node.__wr_callbacks = node.__wr_callbacks || []).push({ cb: cb, priority: priority });
}
exports.whenRendered = whenRendered;
function itsRendered(node) {
    (node.__wr_callbacks || [])
        .sort(function (a, b) { return b.priority - a.priority; })
        .forEach(function (w) { return w.cb(); });
    node.childNodes.forEach(itsRendered);
}
exports.itsRendered = itsRendered;
function setLSMarker(fragment, marker) {
    fragment.__ls_marker = marker;
    if (!fragment.contains(marker))
        fragment.appendChild(marker);
}
exports.setLSMarker = setLSMarker;
function getLSMarker(fragment) {
    return fragment.__ls_marker;
}
exports.getLSMarker = getLSMarker;
function addLSMarker(fragment) {
    var marker = document.createElement('i');
    marker.setAttribute('hidden', '');
    setLSMarker(fragment, marker);
    return marker;
}
exports.addLSMarker = addLSMarker;
//# sourceMappingURL=lifecycle.js.map