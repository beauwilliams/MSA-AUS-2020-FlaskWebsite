"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var html_1 = require("@connectv/html");
var observable_1 = require("./observable");
var pin_1 = require("./pin");
var promise_1 = require("./promise");
var context_1 = require("./context");
var transport_1 = require("./transport");
/**
 *
 * A renderer (child of `ExtensibleRenderer` class from `@connectv/html`)
 * specifically equipped to handle server-side rendering. Instances of this class
 * will be equipped with specialized plugins for SSR `Pin` (`@connectv/core`) or `Observable` (`rxjs`)
 * objects, alongside plugins for enabling rendering `Promise` objects on the DOM.
 *
 */
var StaticRenderer = /** @class */ (function (_super) {
    __extends(StaticRenderer, _super);
    function StaticRenderer() {
        return _super.apply(this, __spreadArrays([new html_1.RefPlugin(),
            new html_1.InnerHTMLPlugin(),
            new html_1.ComponentPlugin(),
            new transport_1.TransportPlugin(),
            new html_1.ExposePlugin(),
            new html_1.CheckCompInputsPlugin(),
            new context_1.ContextPlugin()], observable_1.observablePlugins(), promise_1.promisePlugins(), pin_1.pinPlugins())) || this;
    }
    return StaticRenderer;
}(html_1.ExtensibleRenderer));
exports.StaticRenderer = StaticRenderer;
/**
 *
 * The base class for SSR-compatible class-based components.
 *
 */
var StaticComponent = /** @class */ (function (_super) {
    __extends(StaticComponent, _super);
    function StaticComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return StaticComponent;
}(html_1.Component));
exports.StaticComponent = StaticComponent;
//# sourceMappingURL=renderer.js.map