"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var html_1 = require("@connectv/html");
var rxjs_1 = require("rxjs");
var lifecycle_1 = require("../shared/lifecycle");
var ContextPlugin = /** @class */ (function () {
    function ContextPlugin() {
        this.priority = html_1.PluginPriority.High;
    }
    ContextPlugin.prototype.prepare = function (_, __, ___, extras, pluginHost) {
        var _plugin = pluginHost.plugins.find(html_1.isDefaultReactiveRecipientPlugin);
        var _default = function () { return _plugin ? _plugin.defaultContext() : undefined; };
        var map = {};
        var context = function (key, recipient) { return map[key] = map[key] || recipient || _default(); };
        extras.context = context;
        return function (node) {
            var sub = new rxjs_1.Subscription();
            var _ctxPlugins = pluginHost.plugins.filter(html_1.isCompContextPlugin);
            if (Object.keys(map).length > 0) {
                lifecycle_1.whenRendered(node, function () {
                    var _ref = node;
                    if (node instanceof DocumentFragment)
                        _ref = lifecycle_1.getLSMarker(node);
                    var ctx = html_1.CTX.resolve(_ref, Object.keys(map));
                    Object.entries(map).forEach(function (_a) {
                        var key = _a[0], recipient = _a[1];
                        var value = ctx[key];
                        if (!_ctxPlugins.find(function (p) { return p.wireContext(key, value, recipient, sub, _ref, pluginHost); }))
                            throw new html_1.UnhandledComponentContextError(key, recipient, value);
                    });
                }, lifecycle_1.WRCallbackHighPriority);
            }
        };
    };
    return ContextPlugin;
}());
exports.ContextPlugin = ContextPlugin;
//# sourceMappingURL=context.js.map