"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = require("path");
function extractModule(_import) {
    var match = /(^.*\/node_modules\/(?:(?:\w+\/)|(?:\@\w+\/\w+\/)))/.exec(_import.filename);
    if (match)
        return [_import, match[1]];
    else
        return [_import, undefined];
}
function modularize(bundle) {
    var modules = {};
    __spreadArrays(bundle.imports, bundle.initImports, (bundle.rendererImport ? [bundle.rendererImport] : [])).map(extractModule)
        .filter(function (_a) {
        var _import = _a[0], module = _a[1];
        return !!module;
    })
        .forEach(function (_a) {
        var _import = _a[0], _module = _a[1];
        var module = _module;
        (modules[module] = modules[module] || []).push(_import);
    });
    Object.entries(modules).forEach(function (_a) {
        var mod = _a[0], imports = _a[1];
        try {
            var pkg = require(path_1.join(mod, 'package.json'));
            if (pkg && pkg.module && pkg.main && pkg.sdhTransport && pkg.sdhTransport === 'module') {
                var main_1 = path_1.dirname(path_1.join(mod, pkg.main));
                var module_1 = path_1.dirname(path_1.join(mod, pkg.module));
                imports.forEach(function (i) {
                    if (i.filename.startsWith(main_1)) {
                        i.filename = path_1.join(module_1, i.filename.substr(main_1.length));
                    }
                });
            }
        }
        catch (_) { }
    });
    return bundle;
}
exports.modularize = modularize;
//# sourceMappingURL=modularize.js.map