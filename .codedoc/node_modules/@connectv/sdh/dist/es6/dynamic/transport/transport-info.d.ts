/// <reference types="node" />
/**
 *
 * Denotes necessary server-side import information
 * for transporting some code to the client.
 *
 */
export interface TransportInfo {
    /**
     *
     * Name of the artifact to be imported.
     *
     */
    name: string;
    /**
     *
     * The file from which the artifact is to be imported from.
     *
     */
    filename: string;
    /**
     *
     * A hash for identifying the transported artifact without leaking
     * server filesystem information to the client side.
     *
     */
    hash: string;
    /**
     *
     * Whether or not this particular dependency is yet resolved by any
     * bundle.
     *
     */
    resolved?: boolean;
}
/**
 *
 * @param name
 * @param trace
 * @returns a `TransportInfo` based on given artifact name and given NodeJS trace.
 *
 */
export declare function createInfo(name: string, trace: NodeJS.CallSite): TransportInfo;
/**
 *
 * Attaches given `TransportInfo` to given `Node`.
 *
 * @param node
 * @param info
 *
 */
export declare function attachInfo(node: Node, info: TransportInfo): void;
/**
 *
 * @param node
 * @returns all attached `TransportInfo` on given `Node`
 *
 */
export declare function fetchInfo(node: Node): TransportInfo[];
/**
 *
 * @param info
 * @returns a lean version of the transport info, omitting runtime-data.
 *
 */
export declare function leanInfo(info: TransportInfo): TransportInfo;
