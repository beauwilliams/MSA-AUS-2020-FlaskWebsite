{"version":3,"file":"create-entry.js","sourceRoot":"","sources":["../../../src/dynamic/create-entry.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAUtC,SAAS,SAAS,CAAC,OAAwB;IACzC,MAAM,WAAW,GAA6B,EAAE,CAAC;IACjD,MAAM,GAAG,GAA8B,EAAE,CAAC;IAE1C,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;QAClB,MAAM,EAAE,mCAAO,CAAC,KAAE,MAAM,EAAE,CAAC,CAAC,IAAI,GAAC,CAAC;QAClC,IAAI,EAAE,CAAC,IAAI,IAAI,WAAW;YAAE,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QACrE,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAEvD,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;AACb,CAAC;AAGD,SAAS,YAAY,CAAC,IAA6B;IACjD,OAAO,YAAY,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,CAAA,CAAC,CAAA,GAAG,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,IAAI,EAAE,CAAA,CAAC,CAAA,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,QAAQ,IAAI,CAAA;AACxH,CAAC;AAGD,MAAM,UAAU,WAAW,CAAC,IAAY,EACpC,OAAwB,EACxB,cAA8B,EAC9B,WAA6B;IAG/B,MAAM,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;IAClC,MAAM,UAAU,GAAG,SAAS,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;IAEhD,MAAM,OAAO,GAAG;QACd,OAAO,EAAE;YACP,SAAS,EAAE,UAAU;YACrB,IAAI,EAAE,gBAAgB;SACvB;QACD,KAAK,EAAE,kCAAkC;KAC1C,CAAC;IAEF,IAAI,cAAc,EAAE;QAClB,OAAO,CAAC,OAAO,GAAG;YAChB,SAAS,EAAE,cAAc,CAAC,IAAI;YAC9B,IAAI,EAAE,cAAc,CAAC,QAAQ;SAC9B,CAAC;QAEF,OAAO,CAAC,KAAK,GAAG,oBAAoB,OAAO,CAAC,OAAO,CAAC,SAAS,KAAK,CAAA;KACnE;IAED,OAAO,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,OAAO,CAAC,OAAO,CAAC,SAAS,YAAY,OAAO,CAAC,OAAO,CAAC,IAAI;EACnH,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;EACzE,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;;EAGnC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;;;EAGhE,OAAO,CAAC,KAAK;;;;;;;;;;CAUd;KACE,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { writeFile } from 'rxline/fs';\n\nimport { TransportInfo } from './transport/transport-info';\n\n\ninterface NormalizedTransportInfo extends TransportInfo {\n  ogname: string;\n}\n\n\nfunction normalize(imports: TransportInfo[]) {\n  const nameCounter = <{[name: string]: number}>{};\n  const res: NormalizedTransportInfo[] = [];\n\n  imports.forEach(i => {\n    const ni = {...i, ogname: i.name};\n    if (ni.name in nameCounter) ni.name = ni.name + nameCounter[ni.name];\n    nameCounter[ni.name] = (nameCounter[ni.name] || 0) + 1;\n\n    res.push(ni);\n  });\n\n  return res;\n}\n\n\nfunction normalImport(info: NormalizedTransportInfo) {\n  return `import { ${(info.ogname !== info.name)?`${info.ogname} as ${info.name}`:info.name} } from '${info.filename}';`\n}\n\n\nexport function createEntry(path: string, \n    imports: TransportInfo[], \n    rendererImport?: TransportInfo, \n    initImports?: TransportInfo[]\n  ) {\n\n  const normal = normalize(imports);\n  const initNormal = normalize(initImports || []);\n\n  const factory = {\n    _import: {\n      _artifact: 'Renderer',\n      _ref: '@connectv/html'\n    },\n    _code: 'const renderer = new Renderer();',\n  };\n\n  if (rendererImport) {\n    factory._import = {\n      _artifact: rendererImport.name,\n      _ref: rendererImport.filename,\n    };\n\n    factory._code = `const renderer = ${factory._import._artifact}();`\n  }\n\n  return writeFile()({ root: '', path, content: `import { ${factory._import._artifact} } from '${factory._import._ref}';\n${initNormal.map(info => normalImport(info) + `${info.name}();`).join('\\n')}\n${normal.map(normalImport).join('\\n')}\n\nconst components = {\n${normal.map(info => `  '${info.hash}': ${info.name}`).join(',\\n')}\n};\n\n${factory._code}\nconst ogtransport = window.__sdh_transport;\nwindow.__sdh_transport = function(id, hash, props) {\n  if (hash in components) {\n    const target = document.getElementById(id);\n    renderer.render(renderer.create(components[hash], props)).after(target);\n    target.remove();\n  }\n  else if (ogtransport) ogtransport(id, hash, props);\n}\n`\n  });\n}\n"]}