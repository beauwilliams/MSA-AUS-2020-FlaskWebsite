import { Plugin } from '@connectv/html';
import { StaticRenderer } from './renderer';
import { Compiled } from './compiled';
/**
 *
 * Denotes a function that renders some HTML content (in form of an HTML Node)
 * using given renderer and document objects.
 *
 */
export declare type RenderFunc = (renderer: StaticRenderer, document: Document) => Node | Promise<Node>;
/**
 *
 * Will create a `Compiled` object from given render function. A render function
 * is any function that returns an HTML Node (or a promise of one), given the proper
 * renderer and document objects.
 *
 * It will also apply any post processors to the `Compiled` object from plugins
 * that are `PostProcessPlugins`, allowing given renderer plugins to do some post processing
 * on the final document.
 *
 * @param render the render function
 * @param plugins a list of renderer plugins to be attached to the renderer
 *
 */
export declare function compile(render: RenderFunc, ...plugins: Plugin<any, any>[]): Compiled;
