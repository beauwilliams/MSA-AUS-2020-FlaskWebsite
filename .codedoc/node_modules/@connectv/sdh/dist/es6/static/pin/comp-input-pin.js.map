{"version":3,"file":"comp-input-pin.js","sourceRoot":"","sources":["../../../../src/static/pin/comp-input-pin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,cAAc,EAAsC,MAAM,gBAAgB,CAAC;AAGpF,MAAM,OAAO,kBAAkB;IAA/B;QAgBE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IACjC,CAAC;IAhBC,QAAQ,CAAC,IAAY,EAAE,IAAS,EAAE,CAAO,EAAE,SAA6B;QACtE,IAAI,SAAS,CAAC,MAAM,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;YACrF,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAErC,IAAI,IAAI,YAAY,UAAU;gBAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;iBAChD,IAAI,SAAS,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;iBACpC,IAAI,IAAI,YAAY,OAAO;gBAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;;gBACxD,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAE3B,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CAGF","sourcesContent":["import { Observable, from } from 'rxjs';\nimport { wrap, value, isPinLike } from '@connectv/core';\nimport { PluginPriority, ComponentSignature, CompPropPlugin } from '@connectv/html';\n\n\nexport class CompInputPinPlugin<R, T> implements CompPropPlugin<R, T> {\n  wireProp(name: string, prop: any, _: Node, signature: ComponentSignature) {\n    if (signature.inputs && name in signature.inputs && isPinLike(signature.inputs[name])) {\n      const input = signature.inputs[name];\n\n      if (prop instanceof Observable) wrap(prop).to(input);\n      else if (isPinLike(prop)) prop.to(input);\n      else if (prop instanceof Promise) wrap(from(prop)).to(input);\n      else value(prop).to(input);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  priority = PluginPriority.High;\n}\n"]}