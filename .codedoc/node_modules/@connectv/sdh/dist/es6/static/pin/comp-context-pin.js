import { Observable, from } from 'rxjs';
import { isPinLike, wrap, value } from '@connectv/core';
import { PluginPriority } from '@connectv/html';
export class CompContextPinPlugin {
    constructor() {
        this.priority = PluginPriority.High;
    }
    wireContext(_, _value, recipient, __) {
        if (isPinLike(recipient)) {
            if (isPinLike(_value))
                _value.to(recipient);
            else if (_value instanceof Observable)
                wrap(_value).to(recipient);
            else if (_value instanceof Promise)
                wrap(from(_value)).to(recipient);
            else
                value(_value).to(recipient);
            return true;
        }
        return false;
    }
}
//# sourceMappingURL=comp-context-pin.js.map