import { ExtensibleRenderer, Component, RefPlugin, InnerHTMLPlugin, ComponentPlugin, ExposePlugin, CheckCompInputsPlugin } from '@connectv/html';
import { observablePlugins } from './observable';
import { pinPlugins } from './pin';
import { promisePlugins } from './promise';
import { ContextPlugin } from './context';
import { TransportPlugin } from './transport';
/**
 *
 * A renderer (child of `ExtensibleRenderer` class from `@connectv/html`)
 * specifically equipped to handle server-side rendering. Instances of this class
 * will be equipped with specialized plugins for SSR `Pin` (`@connectv/core`) or `Observable` (`rxjs`)
 * objects, alongside plugins for enabling rendering `Promise` objects on the DOM.
 *
 */
export class StaticRenderer extends ExtensibleRenderer {
    constructor() {
        super(new RefPlugin(), new InnerHTMLPlugin(), new ComponentPlugin(), new TransportPlugin(), new ExposePlugin(), new CheckCompInputsPlugin(), new ContextPlugin(), ...observablePlugins(), ...promisePlugins(), ...pinPlugins());
    }
}
/**
 *
 * The base class for SSR-compatible class-based components.
 *
 */
export class StaticComponent extends Component {
}
//# sourceMappingURL=renderer.js.map