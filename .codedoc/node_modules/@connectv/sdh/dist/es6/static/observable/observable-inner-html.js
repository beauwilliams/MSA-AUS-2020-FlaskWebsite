import { Observable } from 'rxjs';
import { PluginPriority } from "@connectv/html";
import { attachPromise, whenRendered } from '../../shared/lifecycle';
export class ObservableInnerHTMLPlugin {
    constructor() {
        this.priority = PluginPriority.Fallback;
    }
    setprop(prop, target, host) {
        if (prop === '_innerHTML' && target instanceof Observable) {
            whenRendered(host, () => {
                attachPromise(host, target.toPromise().then(v => {
                    host.innerHTML = (v !== undefined) ? v.toString() : '';
                }));
            });
            return true;
        }
        return false;
    }
}
//# sourceMappingURL=observable-inner-html.js.map