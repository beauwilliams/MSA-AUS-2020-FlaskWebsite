import { Observable, Subject, from, of } from 'rxjs';
import { isPinLike } from '@connectv/core';
import { PluginPriority } from '@connectv/html';
export class CompContextSubjectPlugin {
    constructor() {
        this.priority = PluginPriority.High;
    }
    wireContext(_, value, recipient, __) {
        if (recipient instanceof Subject) {
            if (isPinLike(value))
                value.subscribe(recipient);
            else if (value instanceof Observable)
                value.subscribe(recipient);
            else if (value instanceof Promise)
                from(value).subscribe(recipient);
            else
                of(value).subscribe(recipient);
            return true;
        }
        return false;
    }
}
//# sourceMappingURL=comp-context-subject.js.map