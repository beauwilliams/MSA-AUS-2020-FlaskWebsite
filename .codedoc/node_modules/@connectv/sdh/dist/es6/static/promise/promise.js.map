{"version":3,"file":"promise.js","sourceRoot":"","sources":["../../../../src/static/promise/promise.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAgC,cAAc,EAAE,MAAM,EAAe,MAAM,gBAAgB,CAAC;AAEnG,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAGvD,MAAM,OAAO,aAAa;IAA1B;QAIE,aAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;IAuCrC,CAAC;IArCC,OAAO,CAAC,IAAY,EAAE,MAA6B,EAAE,IAAiB;QACpE,IAAI,MAAM,YAAY,OAAO,EAAE;YAC7B,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBAClC,IAAI,OAAO,CAAC,KAAK,SAAS,EAAE;oBAC1B,IAAI,CAAC;wBAAE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;wBAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;iBACjC;;oBAEC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;YAClE,CAAC,CAAC,CAAC,CAAC;YAEJ,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM,CAAC,MAA2C,EAAE,IAAU,EACtD,QAAsD;QAC5D,IAAI,MAAM,YAAY,OAAO,EAAE;YAC7B,MAAM,MAAM,GAAG,gBAAC,MAAM,OAAE,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAEzB,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBAClC,IAAI,OAAa,CAAC;gBAClB,IAAI,CAAC,YAAY,IAAI;oBAAE,OAAO,GAAG,CAAC,CAAC;;oBAC9B,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAE9E,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBACnC,MAAM,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC,CAAC;YAEJ,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF","sourcesContent":["import { PropertyPlugin, AppendPlugin, PluginPriority, Marker, RawRenderer } from '@connectv/html';\n\nimport { attachPromise } from '../../shared/lifecycle';\n\n\nexport class PromisePlugin<R, T> implements \n  PropertyPlugin<R | Promise<RawValue>, T>, \n  AppendPlugin<R | Promise<RawValue | Node>, T> {\n\n  priority = PluginPriority.Fallback;\n\n  setprop(prop: string, target: R | Promise<RawValue>, host: HTMLElement) {\n    if (target instanceof Promise) {\n      attachPromise(host, target.then(v => {\n        if (typeof v === 'boolean') {\n          if (v) host.setAttribute(prop, '');\n          else host.removeAttribute(prop);\n        }\n        else\n          host.setAttribute(prop, (v !== undefined) ? v.toString() : '')\n      }));\n\n      return true;\n    }\n\n    return false;\n  }\n\n  append(target: R | Node | Promise<RawValue | Node>, host: Node, \n          renderer: RawRenderer<R | Promise<RawValue | Node>, T>) {\n    if (target instanceof Promise) {\n      const marker = <Marker/>;\n      host.appendChild(marker);\n\n      attachPromise(host, target.then(v => {\n        let _target: Node;\n        if (v instanceof Node) _target = v;\n        else _target = document.createTextNode((v !== undefined) ? v.toString() : '');\n\n        host.insertBefore(_target, marker);\n        marker.remove();\n      }));\n\n      return true;\n    }\n\n    return false;\n  }\n}\n"]}