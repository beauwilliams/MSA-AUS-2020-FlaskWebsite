{"version":3,"file":"trace.js","sourceRoot":"","sources":["../../../src/shared/trace.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,SAAS;IACvB,MAAM,YAAY,GAAG,KAAK,CAAC,iBAAiB,CAAC;IAC7C,IAAI,MAAmC,CAAC;IAExC,IAAI;QACF,MAAM,GAAG,GAAG,IAAI,KAAK,EAA0C,CAAC;QAChE,KAAK,CAAC,iBAAiB,GAAG,UAAU,CAAC,EAAE,KAAK,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;QAEhE,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAClB,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAClB,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;KAE5B;IAAC,OAAO,CAAC,EAAE,GAAE;IAEd,KAAK,CAAC,iBAAiB,GAAG,YAAY,CAAC;IAEvC,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["export function callTrace() {\n  const originalFunc = Error.prepareStackTrace;\n  let caller: NodeJS.CallSite | undefined;\n\n  try {\n    const err = new Error() as Error & { stack: NodeJS.CallSite[] };\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n\n    err.stack.shift();\n    err.stack.shift();\n    caller = err.stack.shift();\n\n  } catch (e) {}\n\n  Error.prepareStackTrace = originalFunc;\n\n  return caller;\n}\n"]}