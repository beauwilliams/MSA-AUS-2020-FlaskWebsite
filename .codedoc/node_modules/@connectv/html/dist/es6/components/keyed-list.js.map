{"version":3,"file":"keyed-list.js","sourceRoot":"","sources":["../../../src/components/keyed-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { State, SimpleDeep, KeyedDeep, KeyFunc, ChangeMap, PinLike, sink, isPinLike, wrap } from '@connectv/core';\n\nimport { RendererLike } from '../renderer/renderer-like';\nimport { CompType, ComponentThis } from '../renderer/plugin/component/types';\n\nimport { Marker } from './marker';\nimport { scanRemove } from './util/scan';\nimport { Observable } from 'rxjs';\n\n\nexport interface KeyedListPropsWithKey {\n  of: State | SimpleDeep | PinLike | Observable<any[]>;\n  each: (sub: SimpleDeep, index?: PinLike) => Node;\n  key: KeyFunc;\n}\n\nexport interface KeyedListPropsWithoutKey {\n  of: KeyedDeep,\n  each: (sub: SimpleDeep, index?: PinLike) => Node;\n}\n\nexport type KeyedListProps = KeyedListPropsWithKey | KeyedListPropsWithoutKey;\n\n\nexport function KeyedList(this: ComponentThis, props: KeyedListProps, renderer: RendererLike<any, any | CompType>) {\n  let startMark = <Marker/>;\n  this.track.mark(startMark);\n\n  let markers : Node[] = [];\n  let list: KeyedDeep;\n\n  if (props.of instanceof KeyedDeep) list = props.of;\n  else {\n    let _props = props as KeyedListPropsWithKey;\n    if (_props.of instanceof State) list = new KeyedDeep(_props.of, _props.key);\n    else if (_props.of instanceof SimpleDeep) list = new KeyedDeep(_props.of.state, _props.key);\n    else {\n      list = new KeyedDeep(new State([]), _props.key);\n      if (isPinLike(_props.of)) _props.of.to(list);\n      else wrap(_props.of).to(list);\n\n      this.track(list);\n    }\n  }\n\n  this.track({\n    bind() {\n      (list.value || []).forEach((entry: any) => {\n        const key = list.keyfunc(entry);\n        const prevMarker = markers[markers.length - 1] || startMark;\n        const marker = <Marker/>;\n        markers.push(marker);\n        renderer.render(<fragment>\n          {props.each(list.key(key), list.index(key))}\n          {marker}\n        </fragment>).after(prevMarker);\n      });\n    }\n  });\n\n  this.track(list.changes.to(sink((changes: ChangeMap) => {\n    if (changes.initial) return; // --> ignore the initial change\n    const len = list.value.length;\n\n    // STEP 1: create extra markers if need be\n    if (len > markers.length) {\n      for (let i = markers.length; i < len; i++) {\n        let marker = <Marker/>;\n        renderer.render(marker).after(markers[i - 1] || startMark);\n        markers.push(marker);\n      }\n    }\n\n    // STEP 2: remove deletions (without removing their markers)\n    changes.deletions.forEach(deletion => {\n      let index = parseInt(deletion.index);\n      let start = markers[index - 1] || startMark;\n      let end = markers[index];\n      scanRemove(start, end);\n    });\n\n    // STEP 3: move moved items\n    let moveTargets: {index: string, nodes: Node[]}[] = [];\n\n    changes.moves.forEach(move => {\n      let oldIndex = parseInt(move.oldIndex);\n      let start = markers[oldIndex - 1] || startMark;\n      let end = markers[oldIndex];\n      moveTargets.push({ index: move.newIndex, nodes: scanRemove(start, end) });\n    });\n\n    moveTargets.forEach(target => {\n      renderer.render(<fragment>{target.nodes}</fragment>).before(markers[target.index as any]);\n    });\n\n    // STEP 4: add additions\n    changes.additions.forEach(addition => {\n      let key = list.keyfunc(addition.item);\n      renderer.render(props.each(list.key(key), list.index(key))).before(markers[addition.index as any]);\n    });\n\n    // STEP 5: remove extra markers if need be\n    if (len < markers.length) {\n      for (let i = len; i < markers.length; i++) (markers[i].parentElement as HTMLElement).removeChild(markers[i]);\n      markers.length = len;\n    }\n  })));\n\n  return <fragment>{startMark}</fragment>;\n}"]}