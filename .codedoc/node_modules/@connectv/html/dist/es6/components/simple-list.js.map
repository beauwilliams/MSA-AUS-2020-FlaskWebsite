{"version":3,"file":"simple-list.js","sourceRoot":"","sources":["../../../src/components/simple-list.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,UAAU,EAAW,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AAK1F,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAUzC,MAAM,UAAU,UAAU,CAAsB,KAAsB,EAAE,QAA2C;IACjH,IAAI,SAAS,GAAG,gBAAC,MAAM,OAAE,CAAC;IAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAE3B,IAAI,OAAO,GAAW,EAAE,CAAC;IACzB,IAAI,IAAgB,CAAC;IACrB,IAAI,KAAK,CAAC,EAAE,YAAY,UAAU;QAAE,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC;SAC/C,IAAI,KAAK,CAAC,EAAE,YAAY,KAAK;QAAE,IAAI,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAC/D;QACH,IAAI,GAAG,IAAI,UAAU,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;QACnC,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;YAAE,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;;YACtC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAE7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAClB;IAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QAC9B,IAAI,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;YACjC,IAAI,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC;YAExD,KAAK,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBAC9D,IAAI,MAAM,GAAG,gBAAC,MAAM,OAAE,CAAC;gBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAE1B,QAAQ,CAAC,MAAM,CACb;oBACG,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;oBAC7B,MAAM,CACE,CACZ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAElB,QAAQ,GAAG,MAAM,CAAC;gBAClB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACtB;SACF;aACI,IAAI,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE;YACtC,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC;YAEtD,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE;gBAC5D,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE;oBACnC,UAAU,EAAE,IAAI;iBACjB,CAAC,CAAC;YAEL,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;SAC/B;IACH,CAAC,CAAC,CAAC,CAAC,CAAC;IAEL,OAAO,kCAAW,SAAS,CAAY,CAAC;AAC1C,CAAC","sourcesContent":["import { State, SimpleDeep, PinLike, sink, value, isPinLike, wrap } from '@connectv/core';\n\nimport { RendererLike } from '../renderer/renderer-like';\nimport { CompType, ComponentThis } from '../renderer/plugin/component/types';\n\nimport { Marker } from './marker';\nimport { scanRemove } from './util/scan';\nimport { Observable } from 'rxjs';\n\n\nexport interface SimpleListProps {\n  of: State | SimpleDeep | PinLike | Observable<any[]>,\n  each: (sub: SimpleDeep, index?: PinLike) => Node;\n}\n\n\nexport function SimpleList(this: ComponentThis, props: SimpleListProps, renderer: RendererLike<any, any | CompType>) {\n  let startMark = <Marker/>;\n  this.track.mark(startMark);\n\n  let markers: Node[] = [];\n  let list: SimpleDeep;\n  if (props.of instanceof SimpleDeep) list = props.of;\n  else if (props.of instanceof State) list = new SimpleDeep(props.of);\n  else {\n    list = new SimpleDeep(new State());\n    if (isPinLike(props.of)) props.of.to(list);\n    else wrap(props.of).to(list);\n\n    this.track(list);\n  }\n\n  this.track(list.to(sink(_list => {\n    if (_list.length > markers.length) {\n      let prevMark = markers[markers.length - 1] || startMark;\n\n      for (let index = markers.length; index < _list.length; index++) {\n        let marker = <Marker/>;\n        let sub = list.sub(index);\n\n        renderer.render(\n          <fragment>\n            {props.each(sub, value(index))}\n            {marker}\n          </fragment>\n        ).after(prevMark);\n\n        prevMark = marker;\n        markers.push(marker);\n      }\n    }\n    else if (_list.length < markers.length) {\n      let prevMark = markers[_list.length - 1] || startMark;\n\n      for (let index = _list.length; index < markers.length; index++)\n        scanRemove(prevMark, markers[index], {\n          includeEnd: true\n        });\n\n      markers.length = _list.length;\n    }\n  })));\n\n  return <fragment>{startMark}</fragment>;\n}\n"]}