import { Observable } from 'rxjs';
import { PinLike } from '@connectv/core';
import { ExtensibleRenderer } from './extensible-renderer';
import { CompType } from './plugin/component/types';
import { Component as _C } from './plugin/component/types';
export declare class ConnectiveRenderer<R = RawValue, T = string> extends ExtensibleRenderer<R | PinLike | Observable<RawValue>, T | CompType<R, string>> {
    constructor();
}
export default ConnectiveRenderer;
export declare abstract class Component<R = any, T = string | CompType<R, string>> extends _C<R, T> {
}
export { Renderer as RawRenderer } from './renderer';
export { ExtensibleRenderer };
export { Ref, ref } from './ref';
export { RendererLike } from './renderer-like';
export * from './plugin';
export * from './error';
