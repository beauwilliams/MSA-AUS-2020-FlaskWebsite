import { ExtensibleRenderer } from './extensible-renderer';
import { LifeCyclePlugin } from './plugin/life-cycle';
import { EventHandlerPlugin } from './plugin/event-handler';
import { RefPlugin } from './plugin/ref';
import { ObjectValuePlugin } from './plugin/object-value';
import { InnerHTMLPlugin } from './plugin/inner-html';
import { ComponentPlugin } from './plugin/component/component';
import { TrackPlugin } from './plugin/component/track';
import { ExposePlugin } from './plugin/component/expose';
import { rxjsPlugins } from './plugin/rxjs';
import { connectivePlugins } from './plugin/connective';
import { Component as _C } from './plugin/component/types';
import { CheckCompInputsPlugin } from './plugin/component/check-inputs';
import { CompStateIOPlugin } from './plugin/component/state-io';
import { ContextPlugin } from './plugin/component/context';
export class ConnectiveRenderer extends ExtensibleRenderer {
    constructor() {
        super(new LifeCyclePlugin(), new EventHandlerPlugin(), new RefPlugin(), new ObjectValuePlugin(), new InnerHTMLPlugin(), new ComponentPlugin(), new TrackPlugin(), new ExposePlugin(), new ContextPlugin(), new CompStateIOPlugin(), new CheckCompInputsPlugin(), ...rxjsPlugins(), ...connectivePlugins());
    }
}
export default ConnectiveRenderer;
export class Component extends _C {
}
export { Renderer as RawRenderer } from './renderer';
export { ExtensibleRenderer };
export { Ref, ref } from './ref';
export * from './plugin';
export * from './error';
//# sourceMappingURL=index.js.map