{"version":3,"file":"check-inputs.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/component/check-inputs.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAE3C,OAAO,EAAgC,sBAAsB,EAA6B,MAAM,SAAS,CAAC;AAE1G,OAAO,EAAE,0BAA0B,EAAE,MAAM,8BAA8B,CAAC;AAG1E,MAAM,OAAO,qBAAqB;IAAlC;QAgBE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IACjC,CAAC;IAfC,IAAI,CAAC,CAAO,EAAE,SAA6B,EAAE,KAA4B;QACvE,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE;gBACzD,IAAI,sBAAsB,CAAa,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE;oBACjE,IAAI,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE;wBAC9B,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC;qBAC1C;yBACI,IAA4C,KAAK,CAAC,YAAa,CAAC,QAAQ;wBAC3E,MAAM,IAAI,0BAA0B,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBACrD;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CAGF","sourcesContent":["import { PropsType } from \"../../../shared/types\";\n\nimport { PluginPriority } from \"../plugin\";\n\nimport { CompType, ComponentSignature, isCompInputWithOptions, CompInputOptionsSpecified } from \"./types\";\nimport { CompIOPlugin } from \"./basic-plugins\";\nimport { ComponentInputMissingError } from \"./errors/input-missing.error\";\n\n\nexport class CheckCompInputsPlugin<Renderable=RawValue, Tag=CompType<Renderable | string> | string>\nimplements CompIOPlugin<Renderable, Tag> {\n  wire(_: Node, signature: ComponentSignature, props: PropsType<Renderable>) {\n    if (signature.inputs) {\n      Object.entries(signature.inputs).forEach(([name, input]) => {\n        if (isCompInputWithOptions<Renderable>(input) && !(name in props)) {\n          if (input.inputOptions.default) {\n            props[name] = input.inputOptions.default;\n          }\n          else if ((<CompInputOptionsSpecified<Renderable>>input.inputOptions).required)\n            throw new ComponentInputMissingError(name, props);\n        }\n      });\n    }\n  }\n\n  priority = PluginPriority.High;\n}\n"]}