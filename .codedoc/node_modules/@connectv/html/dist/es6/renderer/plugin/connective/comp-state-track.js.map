{"version":3,"file":"comp-state-track.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/connective/comp-state-track.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAEvC,OAAO,KAAK,CAAC,MAAM,4BAA4B,CAAC;AAEhD,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAM3C,MAAM,OAAO,oBAAoB;IAAjC;QAWE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IACjC,CAAC;IAVC,IAAI,CAAC,IAAU,EAAE,SAA6B;QAC5C,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC9C,IAAI,KAAK,YAAY,KAAK;oBACxB,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CAGF","sourcesContent":["import { State } from '@connectv/core';\n\nimport * as L from '../../../shared/life-cycle';\n\nimport { PluginPriority } from \"../plugin\";\n\nimport { CompType, ComponentSignature } from \"../component/types\";\nimport { CompIOPlugin } from \"../component/basic-plugins\";\n\n\nexport class CompStateTrackPlugin<Renderable=RawValue, Tag=CompType<Renderable | string> | string>\nimplements CompIOPlugin<Renderable, Tag> {\n  wire(node: Node, signature: ComponentSignature) {\n    if (signature.states) {\n      Object.values(signature.states).forEach(state => {\n        if (state instanceof State)\n          L.attach(state, node);\n      });\n    }\n  }\n\n  priority = PluginPriority.High;\n}\n"]}