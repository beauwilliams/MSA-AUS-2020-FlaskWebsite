{"version":3,"file":"comp-output-observable.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/rxjs/comp-output-observable.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAC3D,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAC3C,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAErC,OAAO,KAAK,CAAC,MAAM,4BAA4B,CAAC;AAEhD,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAG3C,OAAO,SAAS,MAAM,aAAa,CAAC;AAGpC,MAAM,OAAO,0BAA0B;IAAvC;QAEE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IA8BjC,CAAC;IA5BC,QAAQ,CAAC,IAAY,EAAE,IAAS,EAAE,IAAU,EAAE,SAA6B;QACzE,IAAI,SAAS,CAAC,OAAO,IAAI,IAAI,IAAI,SAAS,CAAC,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,UAAU,EAAE;YACnG,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAoB,CAAC;YACxD,IAAI,IAAI,YAAY,OAAO,EAAE;gBAC3B,IAAI,GAAG,GAAG,IAAI,CAAC;gBACf,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBAE9D,OAAO,IAAI,CAAC;aACb;iBACI,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAI,GAAW,CAAC;gBAChB,IAAI,IAAI,YAAY,MAAM;oBAAE,GAAG,GAAG,IAAI,CAAC;;oBAClC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAW,CAAC;gBAEzC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBAE9D,OAAO,IAAI,CAAC;aACb;iBACI,IAAI,OAAO,IAAI,IAAI,UAAU,EAAE;gBAClC,IAAI,IAAI,GAAG,IAAI,CAAC;gBAChB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBAE1D,OAAO,IAAI,CAAC;aACb;SACF;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF","sourcesContent":["import { isPinLike, source, Source } from \"@connectv/core\";\nimport { Subject, Observable } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\nimport * as L from \"../../../shared/life-cycle\";\n\nimport { PluginPriority } from \"../plugin\";\nimport { CompType, ComponentSignature } from \"../component/types\";\nimport { CompPropPlugin } from \"../component/basic-plugins\";\nimport trackable from \"./trackable\";\n\n\nexport class CompOutputObservablePlugin<Renderable=RawValue, Tag=CompType<Renderable | string> | string>\nimplements CompPropPlugin<Renderable, Tag> {\n  priority = PluginPriority.High;\n\n  wireProp(name: string, prop: any, node: Node, signature: ComponentSignature) {\n    if (signature.outputs && name in signature.outputs && signature.outputs[name] instanceof Observable) {\n      let output = signature.outputs[name] as Observable<any>;\n      if (prop instanceof Subject) {\n        let sub = prop;\n        L.attach(trackable(output.pipe(tap(v => sub.next(v)))), node);\n\n        return true;\n      }\n      else if (isPinLike(prop)) {\n        let src: Source;\n        if (prop instanceof Source) src = prop;\n        else src = prop.from(source()) as Source;\n\n        L.attach(trackable(output.pipe(tap(v => src.send(v)))), node);\n        \n        return true;\n      }\n      else if (typeof prop == 'function') {\n        let func = prop;\n        L.attach(trackable(output.pipe(tap(v => func(v)))), node);\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n"]}