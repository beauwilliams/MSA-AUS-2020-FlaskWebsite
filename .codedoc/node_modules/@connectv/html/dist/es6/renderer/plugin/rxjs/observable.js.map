{"version":3,"file":"observable.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/rxjs/observable.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAgB,MAAM,MAAM,CAAC;AAGhD,OAAO,KAAK,CAAC,MAAM,4BAA4B,CAAC;AAEhD,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAI3C,MAAM,OAAO,gBAAgB;IAA7B;QAIE,aAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;IA4CrC,CAAC;IA1CC,OAAO,CAAC,IAAY,EAAE,MAA2C,EAAE,IAAiB;QAClF,IAAI,MAAM,YAAY,UAAU,EAAE;YAChC,IAAI,GAAiB,CAAC;YAEtB,CAAC,CAAC,MAAM,CAAuB;gBAC7B,IAAI;oBACF,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;wBACzB,IAAI,OAAO,CAAC,KAAK,SAAS,EAAE;4BAC1B,IAAI,CAAC;gCAAE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;gCAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;yBACjC;;4BAEC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;oBAClE,CAAC,CAAC,CAAC;gBACL,CAAC;gBACD,KAAK,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;aAC/B,EAAE,IAAI,CAAC,CAAC;YAET,OAAO,IAAI,CAAC;SACb;;YAEC,OAAO,KAAK,CAAA;IAChB,CAAC;IAED,MAAM,CAAC,MAAmG,EACpG,IAAU;QACd,IAAI,MAAM,YAAY,UAAU,EAAE;YAChC,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YACvC,IAAI,GAAiB,CAAC;YAEtB,CAAC,CAAC,MAAM,CAAuB;gBAC7B,IAAI,KAAK,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjG,KAAK,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;aAC/B,EAAE,IAAI,CAAC,CAAC;YAET,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAEvB,OAAO,IAAI,CAAC;SACb;;YAEC,OAAO,KAAK,CAAC;IACjB,CAAC;CACF","sourcesContent":["import { Observable, Subscription } from 'rxjs';\nimport { Bindable, Clearable } from '@connectv/core';\n\nimport * as L from '../../../shared/life-cycle';\n\nimport { PluginPriority } from '../plugin';\nimport { PropertyPlugin, AppendPlugin } from '../basic-plugins';\n\n\nexport class ObservablePlugin<R=never, T=string>\n  implements PropertyPlugin<R | Observable<RawValue>, T>,\n            AppendPlugin<R | Observable<RawValue>, T> {\n\n  priority = PluginPriority.Fallback;\n\n  setprop(prop: string, target: RawValue | R | Observable<RawValue>, host: HTMLElement): boolean {\n    if (target instanceof Observable) {\n      let sub: Subscription;\n\n      L.attach(<Bindable & Clearable>{\n        bind() {\n          sub = target.subscribe(v => {\n            if (typeof v === 'boolean') {\n              if (v) host.setAttribute(prop, '');\n              else host.removeAttribute(prop);\n            }\n            else\n              host.setAttribute(prop, (v !== undefined) ? v.toString() : '')\n          });\n        },\n        clear() { sub.unsubscribe(); },\n      }, host);\n\n      return true;\n    }\n    else\n      return false\n  }\n\n  append(target: RawValue | R | Observable<RawValue> | Node | (RawValue | R | Observable<RawValue> | Node)[],\n        host: Node): boolean {\n    if (target instanceof Observable) {\n      let node = document.createTextNode('');\n      let sub: Subscription;\n\n      L.attach(<Bindable & Clearable>{\n        bind() { sub = target.subscribe(v => node.textContent = (v !== undefined) ? v.toString() : ''); },\n        clear() { sub.unsubscribe(); },\n      }, node);\n\n      host.appendChild(node);\n\n      return true;\n    }\n    else\n      return false;\n  }\n}\n"]}