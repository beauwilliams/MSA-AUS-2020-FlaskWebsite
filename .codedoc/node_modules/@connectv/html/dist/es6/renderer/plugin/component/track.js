import * as L from '../../../shared/life-cycle';
import { PluginPriority } from '../plugin';
export class TrackPlugin {
    constructor() {
        this.priority = PluginPriority.High;
    }
    prepare(_, __, ___, extras) {
        let tracked = [];
        let marker;
        extras.track = ((whatever) => tracked.push(whatever));
        extras.track.mark = (node) => marker = node;
        return (node) => {
            if (node instanceof DocumentFragment && marker)
                L.setLifeCycleMarker(node, marker);
            tracked.forEach(thing => L.attach(thing, node));
        };
    }
}
//# sourceMappingURL=track.js.map