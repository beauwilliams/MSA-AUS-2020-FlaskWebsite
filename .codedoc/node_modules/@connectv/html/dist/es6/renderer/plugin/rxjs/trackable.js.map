{"version":3,"file":"trackable.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/rxjs/trackable.ts"],"names":[],"mappings":"AACA,OAAO,EAAc,YAAY,EAAE,MAAM,MAAM,CAAC;AAGhD,MAAM,OAAO,SAAS;IAGpB,YAAqB,GAAoB;QAApB,QAAG,GAAH,GAAG,CAAiB;IAAG,CAAC;IAE7C,IAAI;QACF,IAAI,CAAC,GAAG,GAAG,IAAI,YAAY,EAAE,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK;QACH,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAGD,MAAM,UAAU,SAAS,CAAI,GAAG,GAAoB;IAClD,OAAO,IAAI,SAAS,CAAI,GAAG,CAAC,CAAC;AAC/B,CAAC;AAGD,eAAe,SAAS,CAAC","sourcesContent":["import { Bindable, Clearable } from \"@connectv/core\";\nimport { Observable, Subscription } from \"rxjs\";\n\n\nexport class Trackable<T> implements Bindable, Clearable {\n  sub: Subscription;\n\n  constructor(readonly obs: Observable<T>[]) {}\n\n  bind() {\n    this.sub = new Subscription();\n    this.obs.forEach(ob => this.sub.add(ob.subscribe()));\n    return this;\n  }\n\n  clear() {\n    this.sub.unsubscribe();\n    return this;\n  }\n}\n\n\nexport function trackable<T>(...obs: Observable<T>[]) {\n  return new Trackable<T>(obs);\n}\n\n\nexport default trackable;"]}