import { PluginPriority } from "../plugin";
import { isCompInputWithOptions } from "./types";
import { ComponentInputMissingError } from "./errors/input-missing.error";
export class CheckCompInputsPlugin {
    constructor() {
        this.priority = PluginPriority.High;
    }
    wire(_, signature, props) {
        if (signature.inputs) {
            Object.entries(signature.inputs).forEach(([name, input]) => {
                if (isCompInputWithOptions(input) && !(name in props)) {
                    if (input.inputOptions.default) {
                        props[name] = input.inputOptions.default;
                    }
                    else if (input.inputOptions.required)
                        throw new ComponentInputMissingError(name, props);
                }
            });
        }
    }
}
//# sourceMappingURL=check-inputs.js.map