{"version":3,"file":"pin-event-handler.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/connective/pin-event-handler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AACjD,OAAO,EAAE,SAAS,EAAE,MAAM,MAAM,CAAC;AAEjC,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAI3C,MAAM,OAAO,qBAAqB;IAAlC;QAeE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IACjC,CAAC;IAfC,OAAO,CAAC,IAAY,EAAE,MAAwC,EAAE,IAAiB;QAC/E,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAE3C,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;gBACrB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAK,CAAC;SACd;;YACI,OAAO,KAAK,CAAC;IACpB,CAAC;CAGF","sourcesContent":["import { isPinLike, wrap } from '@connectv/core';\nimport { fromEvent } from 'rxjs';\n\nimport { PluginPriority } from '../plugin';\nimport { PropertyPlugin } from '../basic-plugins';\n\n\nexport class PinEventHandlerPlugin<R, T> implements PropertyPlugin<HTML.EventHandler | R, T> {\n  setprop(prop: string, target: R | RawValue | HTML.EventHandler, host: HTMLElement): boolean {\n    if (prop.startsWith('on')) {\n      const event = prop.substr(2).toLowerCase();\n\n      if (isPinLike(target)) {\n        wrap(fromEvent(host, event)).to(target);\n        return true;\n      }\n\n      return false;\n    }\n    else return false;\n  }\n  \n  priority = PluginPriority.High;\n}\n"]}