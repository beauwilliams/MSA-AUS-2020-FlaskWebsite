import { sink, isPinLike } from '@connectv/core';
import * as L from '../../../shared/life-cycle';
import * as _ClassListFixed from '../../../shared/class-list-fixed';
import { PluginPriority } from '../plugin';
export class PinClassPlugin {
    constructor() {
        this.priority = PluginPriority.High;
    }
    setprop(prop, target, host) {
        if (prop === 'class' && isPinLike(target)) {
            L.attach(target.to(sink(v => {
                let classes = (v !== undefined) ? v.toString() : '';
                const fixed = _ClassListFixed.get(host);
                if (fixed.length > 0)
                    classes += ' ' + fixed.join(' ');
                host.setAttribute('class', classes);
            })), host);
            return true;
        }
        else
            return false;
    }
}
//# sourceMappingURL=pin-class.js.map