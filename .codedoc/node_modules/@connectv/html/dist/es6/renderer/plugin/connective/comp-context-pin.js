import { Observable } from "rxjs";
import { isPinLike, Source } from "@connectv/core";
import { PluginPriority } from "../plugin";
export class CompContextPinPlugin {
    constructor() {
        this.priority = PluginPriority.High;
    }
    wireContext(_, value, recipient, sub) {
        if (recipient instanceof Source) {
            if (isPinLike(value))
                sub.add(value.subscribe(v => recipient.send(v)));
            else if (value instanceof Observable)
                sub.add(value.subscribe(v => recipient.send(v)));
            else
                recipient.send(value);
            return true;
        }
        return false;
    }
}
//# sourceMappingURL=comp-context-pin.js.map