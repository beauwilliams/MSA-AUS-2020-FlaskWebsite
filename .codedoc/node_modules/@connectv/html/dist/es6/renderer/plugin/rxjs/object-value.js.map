{"version":3,"file":"object-value.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/rxjs/object-value.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAgB,MAAM,MAAM,CAAC;AAEhD,OAAO,KAAK,CAAC,MAAM,4BAA4B,CAAC;AAEhD,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAI3C,MAAM,OAAO,2BAA2B;IAAxC;QACE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IAejC,CAAC;IAbC,OAAO,CAAC,IAAY,EAAE,MAAsC,EAAE,IAAiB;QAC7E,IAAI,IAAI,KAAK,QAAQ;eACd,CAAC,IAAI,YAAY,iBAAiB,IAAI,IAAI,YAAY,gBAAgB,CAAC;eACvE,MAAM,YAAY,UAAU,EAAE;YACnC,IAAI,GAAiB,CAAC;YACtB,CAAC,CAAC,MAAM,CAAuB;gBAC7B,IAAI,KAAK,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAE,IAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,CAAC,CAAC;gBAChE,KAAK,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;aAC/B,EAAE,IAAI,CAAC,CAAC;YACT,OAAO,IAAI,CAAC;SACb;;YACI,OAAO,KAAK,CAAC;IACpB,CAAC;CACF","sourcesContent":["import { Bindable, Clearable } from '@connectv/core';\nimport { Observable, Subscription } from 'rxjs';\n\nimport * as L from '../../../shared/life-cycle';\n\nimport { PluginPriority } from '../plugin';\nimport { PropertyPlugin } from '../basic-plugins';\n\n\nexport class ObservableObjectValuePlugin<R, T> implements PropertyPlugin<Observable<any> | R, T> {\n  priority = PluginPriority.High;\n\n  setprop(prop: string, target: Observable<any> | R | RawValue, host: HTMLElement): boolean {\n    if (prop === '_value'\n        && (host instanceof HTMLOptionElement || host instanceof HTMLInputElement)\n        && target instanceof Observable) {\n      let sub: Subscription;\n      L.attach(<Bindable & Clearable>{\n        bind() { sub = target.subscribe(v => (host as any)._value = v) },\n        clear() { sub.unsubscribe(); },\n      }, host);\n      return true;\n    }\n    else return false;\n  }\n}\n"]}