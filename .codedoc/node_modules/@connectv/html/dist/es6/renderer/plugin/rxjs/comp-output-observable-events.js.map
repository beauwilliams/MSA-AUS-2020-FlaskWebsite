{"version":3,"file":"comp-output-observable-events.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/rxjs/comp-output-observable-events.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAClC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAErC,OAAO,KAAK,CAAC,MAAM,4BAA4B,CAAC;AAEhD,OAAO,EAAE,mBAAmB,EAAE,MAAM,+BAA+B,CAAC;AACpE,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAK3C,OAAO,SAAS,MAAM,aAAa,CAAC;AAGpC,MAAM,OAAO,gCAAgC;IAA7C;QAoBE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IACjC,CAAC;IAnBC,IAAI,CAAC,IAAU,EAAE,SAA6B;QAC5C,IAAI,CAAC,CAAC,IAAI,YAAY,gBAAgB,CAAC,IAAI,SAAS,CAAC,OAAO,EAAE;YAE5D,mBAAmB,EAAE,CAAC;YAEtB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;gBAC3D,IAAI,MAAM,YAAY,UAAU;oBAC9B,CAAC,CAAC,MAAM,CAAC,SAAS,CAChB,MAAM,CAAC,IAAI,CACT,GAAG,CAAC,KAAK,CAAC,EAAE,CACV,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,EAAC,KAAK,EAAC,EAAC,CAAC,CAAC,CAC7D,CACF,CACF,EAAE,IAAI,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CAGF","sourcesContent":["import { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport * as L from '../../../shared/life-cycle';\n\nimport { polyfillCustomEvent } from '../util/custom-event.polyfill';\nimport { PluginPriority } from \"../plugin\";\n\nimport { CompType, ComponentSignature } from \"../component/types\";\nimport { CompIOPlugin } from \"../component/basic-plugins\";\n\nimport trackable from './trackable';\n\n\nexport class CompOutputObservableEventsPlugin<Renderable=RawValue, Tag=CompType<Renderable | string> | string>\nimplements CompIOPlugin<Renderable, Tag> {\n  wire(node: Node, signature: ComponentSignature) {\n    if (!(node instanceof DocumentFragment) && signature.outputs) {\n\n      polyfillCustomEvent();\n\n      Object.entries(signature.outputs).forEach(([name, output]) => {\n        if (output instanceof Observable)\n          L.attach(trackable(\n            output.pipe(\n              tap(value =>\n                node.dispatchEvent(new CustomEvent(name, {detail: {value}}))\n              )\n            )\n          ), node);\n      });\n    }\n  }\n\n  priority = PluginPriority.High;\n}\n"]}