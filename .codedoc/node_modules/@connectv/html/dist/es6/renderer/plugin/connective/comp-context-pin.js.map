{"version":3,"file":"comp-context-pin.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/connective/comp-context-pin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,UAAU,EAAE,MAAM,MAAM,CAAC;AAChD,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAInD,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAI3C,MAAM,OAAO,oBAAoB;IAAjC;QAcE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IACjC,CAAC;IAbC,WAAW,CAAC,CAAS,EAAE,KAAU,EAAE,SAAc,EAAE,GAAiB;QAClE,IAAI,SAAS,YAAY,MAAM,EAAE;YAC/B,IAAI,SAAS,CAAC,KAAK,CAAC;gBAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAClE,IAAI,KAAK,YAAY,UAAU;gBAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAClF,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAE3B,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CAGF","sourcesContent":["import { Subscription, Observable } from \"rxjs\";\nimport { isPinLike, Source } from \"@connectv/core\";\n\nimport { CompContextPlugin } from \"../component/basic-plugins\";\nimport { CompType } from \"../component/types\";\nimport { PluginPriority } from \"../plugin\";\n\n\n\nexport class CompContextPinPlugin<Renderable=RawValue, Tag=CompType<Renderable | string> | string>\nimplements CompContextPlugin<Renderable, Tag> {\n  wireContext(_: string, value: any, recipient: any, sub: Subscription) {\n    if (recipient instanceof Source) {\n      if (isPinLike(value)) sub.add(value.subscribe(v => recipient.send(v)));\n      else if (value instanceof Observable) sub.add(value.subscribe(v => recipient.send(v)));\n      else recipient.send(value);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  priority = PluginPriority.High;\n}\n"]}