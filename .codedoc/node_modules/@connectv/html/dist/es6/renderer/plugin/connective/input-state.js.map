{"version":3,"file":"input-state.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/connective/input-state.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,MAAM,CAAC;AAEjC,OAAO,KAAK,CAAC,MAAM,4BAA4B,CAAC;AAEhD,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAE3C,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAGnE,MAAM,OAAO,gBAAgB;IAA7B;QAoBE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IACjC,CAAC;IApBC,OAAO,CAAC,IAAY,EAAE,MAA4B,EAAE,IAAiB;QACnE,IAAI,IAAI,KAAK,QAAQ,IAAI,CACnB,IAAI,YAAY,gBAAgB;YAChC,IAAI,YAAY,mBAAmB;YACnC,IAAI,YAAY,iBAAiB,CAClC,IAAI,MAAM,YAAY,KAAK,EAAE;YAEhC,CAAC,CAAC,MAAM,CACN,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;iBAC7B,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;iBAClC,EAAE,CAAC,MAAM,CAAC;iBACV,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EACxC,IAAI,CAAC,CAAC;YAEN,OAAO,IAAI,CAAC;SACb;;YACI,OAAO,KAAK,CAAC;IACpB,CAAC;CAGF","sourcesContent":["import { State, sink, wrap, map } from '@connectv/core';\nimport { fromEvent } from 'rxjs';\n\nimport * as L from '../../../shared/life-cycle';\n\nimport { PluginPriority } from '../plugin';\nimport { PropertyPlugin } from '../basic-plugins';\nimport { setInputValue, getInputValue } from '../util/input-value';\n\n\nexport class InputStatePlugin<R, T> implements PropertyPlugin<State | R, T> {\n  setprop(prop: string, target: RawValue | R | State, host: HTMLElement): boolean {\n    if (prop === '_state' && (\n          host instanceof HTMLInputElement ||\n          host instanceof HTMLTextAreaElement ||\n          host instanceof HTMLSelectElement\n        ) && target instanceof State) {\n\n      L.attach(\n        wrap(fromEvent(host, 'input'))\n        .to(map(() => getInputValue(host)))\n        .to(target)\n        .to(sink(v => setInputValue(host, v))),\n      host);\n\n      return true;\n    }\n    else return false;\n  }\n\n  priority = PluginPriority.High;\n}"]}