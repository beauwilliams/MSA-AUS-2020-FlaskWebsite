{"version":3,"file":"state-io-plugin.js","sourceRoot":"","sources":["../../../../../src/renderer/plugin/component/state-io-plugin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAM3C,MAAM,OAAO,iBAAiB;IAA9B;QAcE,aAAQ,GAAG,cAAc,CAAC,IAAI,CAAC;IACjC,CAAC;IAbC,IAAI,CAAC,CAAO,EAAE,SAA6B;QACzC,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE;gBACzD,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,EAAE,CAAC;gBAC1C,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,IAAI,EAAE,CAAC;gBAE5C,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;gBAC/B,SAAS,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;YACjF,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CAGF","sourcesContent":["import { PluginPriority } from \"../plugin\";\n\nimport { CompType, ComponentSignature } from \"./types\";\nimport { CompIOPlugin } from \"./basic-plugins\";\n\n\nexport class CompStateIOPlugin<Renderable=RawValue, Tag=CompType<Renderable | string> | string>\nimplements CompIOPlugin<Renderable, Tag> {\n  wire(_: Node, signature: ComponentSignature) {\n    if (signature.states) {\n      Object.entries(signature.states).forEach(([name, state]) => {\n        signature.inputs = signature.inputs || {};\n        signature.outputs = signature.outputs || {};\n\n        signature.inputs[name] = state;\n        signature.outputs[`on${name[0].toUpperCase() + name.substr(1)}Change`] = state;\n      });\n    }\n  }\n\n  priority = PluginPriority.High;\n}\n"]}