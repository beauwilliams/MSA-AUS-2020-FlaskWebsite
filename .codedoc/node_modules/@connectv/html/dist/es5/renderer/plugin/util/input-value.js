"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function getInputValue(el) {
    if (el instanceof HTMLInputElement) {
        if (el.type === 'number')
            return parseFloat(el.value);
        else if (el.type === 'checkbox')
            return el.checked;
        else if (el.type === 'radio' && el._value)
            return el._value;
        else
            return el.value;
    }
    else if (el instanceof HTMLSelectElement) {
        var _res = [];
        for (var i = 0; i < el.options.length; i++) {
            var opt = el.options.item(i);
            if (opt && opt.selected)
                _res.push(opt._value || opt.value || opt.text);
        }
        if (!el.multiple)
            return _res[0];
        else
            return _res;
    }
    else
        return el.value;
}
exports.getInputValue = getInputValue;
function setInputValue(el, value) {
    if (el instanceof HTMLInputElement) {
        if (el.type === 'checkbox')
            el.checked = !!value;
        else if (el.type === 'radio')
            el.checked = (el._value && el._value === value) || value === el.value;
        else
            el.value = value;
    }
    else if (el instanceof HTMLSelectElement) {
        var val = value;
        if (!Array.isArray(val))
            val = [val];
        for (var i = 0; i < el.options.length; i++) {
            var opt = el.options.item(i);
            if (opt) {
                opt.selected = ((opt._value && val.includes(opt._value))
                    || (opt.value && val.includes(opt.value))
                    || (!opt.value && val.includes(opt.text)));
            }
        }
    }
    else
        el.value = value;
}
exports.setInputValue = setInputValue;
//# sourceMappingURL=input-value.js.map