"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var rxjs_1 = require("rxjs");
var operators_1 = require("rxjs/operators");
var L = __importStar(require("../../../shared/life-cycle"));
var plugin_1 = require("../plugin");
var input_value_1 = require("../util/input-value");
var InputSubjectPlugin = /** @class */ (function () {
    function InputSubjectPlugin() {
        this.priority = plugin_1.PluginPriority.High;
    }
    InputSubjectPlugin.prototype.setprop = function (prop, target, host) {
        if (prop === '_state' && (host instanceof HTMLInputElement ||
            host instanceof HTMLTextAreaElement) && target instanceof rxjs_1.BehaviorSubject) {
            var sub_1 = new rxjs_1.Subscription();
            L.attach({
                bind: function () {
                    sub_1.add(rxjs_1.fromEvent(host, 'input')
                        .pipe(operators_1.map(function () { return input_value_1.getInputValue(host); })).subscribe(target));
                    sub_1.add(target.subscribe(function (v) { return input_value_1.setInputValue(host, v); }));
                },
                clear: function () { sub_1.unsubscribe(); },
            }, host);
            return true;
        }
        else
            return false;
    };
    return InputSubjectPlugin;
}());
exports.InputSubjectPlugin = InputSubjectPlugin;
//# sourceMappingURL=input-subject.js.map