import { PropsType } from '../../../shared/types';
import { ChildType } from '../../renderer';
import { PluginPriority, PluginHost } from '../plugin';
import { CreatePlugin } from '../basic-plugins';
import { CompType } from './types';
export declare class ComponentPlugin<Renderable = RawValue, Tag = CompType<Renderable, string> | string> implements CreatePlugin<Renderable | RawValue, Tag | CompType<Renderable, Tag> | string> {
    priority: PluginPriority;
    create(tag: string | CompType<Renderable, Tag> | Tag, props: PropsType<RawValue | Renderable> | undefined, children: ChildType<Renderable>[], host: PluginHost<Renderable | RawValue, Tag | CompType<Renderable, Tag> | string>): Node | undefined;
}
