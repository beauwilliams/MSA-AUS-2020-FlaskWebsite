"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@connectv/core");
var marker_1 = require("./marker");
var scan_1 = require("./util/scan");
function SimpleList(props, renderer) {
    var startMark = renderer.create(marker_1.Marker, null);
    this.track.mark(startMark);
    var markers = [];
    var list;
    if (props.of instanceof core_1.SimpleDeep)
        list = props.of;
    else if (props.of instanceof core_1.State)
        list = new core_1.SimpleDeep(props.of);
    else {
        list = new core_1.SimpleDeep(new core_1.State());
        if (core_1.isPinLike(props.of))
            props.of.to(list);
        else
            core_1.wrap(props.of).to(list);
        this.track(list);
    }
    this.track(list.to(core_1.sink(function (_list) {
        if (_list.length > markers.length) {
            var prevMark = markers[markers.length - 1] || startMark;
            for (var index = markers.length; index < _list.length; index++) {
                var marker = renderer.create(marker_1.Marker, null);
                var sub = list.sub(index);
                renderer.render(renderer.create("fragment", null,
                    props.each(sub, core_1.value(index)),
                    marker)).after(prevMark);
                prevMark = marker;
                markers.push(marker);
            }
        }
        else if (_list.length < markers.length) {
            var prevMark = markers[_list.length - 1] || startMark;
            for (var index = _list.length; index < markers.length; index++)
                scan_1.scanRemove(prevMark, markers[index], {
                    includeEnd: true
                });
            markers.length = _list.length;
        }
    })));
    return renderer.create("fragment", null, startMark);
}
exports.SimpleList = SimpleList;
//# sourceMappingURL=simple-list.js.map