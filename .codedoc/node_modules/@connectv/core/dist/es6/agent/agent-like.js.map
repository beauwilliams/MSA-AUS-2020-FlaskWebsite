{"version":3,"file":"agent-like.js","sourceRoot":"","sources":["../../../src/agent/agent-like.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAExC,OAAO,EAAE,WAAW,EAAa,MAAM,aAAa,CAAC;AAqDrD;;;;;;GAMG;AACH,MAAM,UAAU,WAAW,CAAC,QAAa;IACvC,OAAO,QAAQ,KAAK,SAAS,IAAI,CAAC,OAAO,QAAQ,CAAC,EAAE,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,QAAQ,CAAC,GAAG,IAAI,UAAU,CAAC;WACrG,QAAQ,CAAC,MAAM,YAAY,MAAM,IAAI,QAAQ,CAAC,OAAO,YAAY,MAAM;QAC1E,QAAQ,CAAC,SAAS,KAAK,SAAS,IAAI,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACxE,CAAC","sourcesContent":["import { Clearable } from '../shared/clearable';\n\nimport { PinLike } from '../pin/pin-like';\nimport { PinMap } from '../pin/pin-map';\n\nimport { isSignature, Signature } from './signature';\n\n\n/**\n *\n * Denotes objects that can behave like an [agent](https://connective.dev/docs/agent).\n *\n */\nexport interface AgentLike extends Clearable {\n\n  /**\n   *\n   * @param label\n   * @returns the input pin corresponding to given label\n   * @throws an error if given label is not allowed by the agent's\n   * [signature](https://connective.dev/docs/agent#signature).\n   *\n   */\n  in(label: string | number): PinLike;\n\n  /**\n   *\n   * @param label\n   * @returns the output pin corresponding to given label\n   * @throws an error if given label is not allowed by the agent's\n   * [signature](https://connective.dev/docs/agent#signature).\n   *\n   */\n  out(label: string | number): PinLike;\n\n  /**\n   *\n   * A `PinMap` object referencing all of input pins of the agent.\n   *\n   */\n  inputs: PinMap;\n\n  /**\n   *\n   * A `PinMap` object referencing all of output pins of the agent.\n   *\n   */\n  outputs: PinMap;\n\n  /**\n   *\n   * The [signature](https://connective.dev/docs/agent#signature) of the agent.\n   *\n   */\n  signature: Signature;\n}\n\n\n/**\n *\n *\n * @param whatever\n * @returns `true` if `whatever` satisfies `AgentLike` interface.\n *\n */\nexport function isAgentLike(whatever: any): whatever is AgentLike {\n  return whatever !== undefined && (typeof whatever.in == 'function') && (typeof whatever.out == 'function')\n    && whatever.inputs instanceof PinMap && whatever.outputs instanceof PinMap &&\n    whatever.signature !== undefined && isSignature(whatever.signature);\n}\n"]}