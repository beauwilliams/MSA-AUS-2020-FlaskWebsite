{"version":3,"file":"join.js","sourceRoot":"","sources":["../../../src/agent/join.ts"],"names":[],"mappings":"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","sourcesContent":["import { tap } from 'rxjs/operators';\n\nimport { Emission, MergedEmissionContextVal } from '../shared/emission';\n\nimport group from '../pin/group';\nimport pin from '../pin/pin';\nimport { Source } from '../pin/source';\nimport { block } from '../pin/filter';\nimport pipe from '../pin/pipe';\n\nimport { Agent } from './agent';\n\n\ntype _CacheType = {[key: string]: Emission};\n\n/**\n *\n * Represents [join](https://connective.dev/docs/join) agents.\n *\n */\nexport class Join extends Agent {\n  private _inject: Source;\n  private _cache: {[fork: string]: _CacheType} = {};\n\n  /**\n   *\n   * @param keys the keys of the joined object\n   * @param pop should it pop the fork tag or not? Default is `true`\n   *\n   */\n  constructor(readonly keys: string[], readonly pop = true) {\n    super({\n      inputs: keys,\n      outputs: ['output']\n    });\n\n    this._inject = new Source();\n  }\n\n  private _receive(key: string, emission: Emission) {\n    if (emission.context.__fork) {\n      if (emission.context.__fork instanceof MergedEmissionContextVal)\n        emission.context.__fork.values.forEach(v => this._fill(v, key, emission));\n      else this._fill(emission.context.__fork, key, emission);\n    }\n    else\n      this._fill([], key, emission);\n  }\n\n  private _cache_key(fork: string[]) { return fork.join(';') }\n\n  private _fill(fork: string[], key: string, emission: Emission) {\n    let _fork = this._cache_key(fork);\n    let _cache = this._cache[_fork] = this._cache[_fork] || {};\n    _cache[key] = emission;\n\n    if (this._complete(_cache))\n      this._emit(_cache, fork);\n  }\n\n  private _emit(cache: _CacheType, fork: string[]) {\n    delete this._cache[this._cache_key(fork)];\n\n    let emission = Emission.from(\n      Object.values(cache),\n      Object.entries(cache).reduce((obj, entry) => {\n        obj[entry[0]] = entry[1].value;\n        return obj;\n      }, <{[key: string]: any}>{})\n    );\n\n    emission.context.__fork = this.pop?fork.slice(0, -1):[...fork];\n    this._inject.emit(emission);\n  }\n\n  private _complete(cache: _CacheType): boolean {\n    return Object.values(cache).length == this.keys.length;\n  }\n\n  protected createOutput(label: string) {\n    this.checkOutput(label);\n    return group(\n      group(...this.keys.map(key => this.in(key).to(pipe(tap(e => this._receive(key, e)))))).to(block()),\n      this._inject\n    ).to(pin());\n  }\n\n  protected createEntries() { return this.keys.map(key => this.in(key)); }\n  protected createExits() { return [this.output] }\n\n  /**\n   *\n   * Shortcut for `.out('output')`, which will emit the joined object.\n   * [Read this](https://connective.dev/docs/handle-error#signature) for more details.\n   *\n   */\n  public get output() { return this.out('output'); }\n\n  public clear() {\n    this._inject.clear();\n    this._cache = {};\n    return this;\n  }\n}\n\n\n/**\n *\n * Creates a [join](https://connective.dev/docs/join) agent. Join agents\n * will re-join values created from the same forked emission in parallel, creating\n * a joined object with given keys.\n * [Checkout the docs](https://connective.dev/docs/join) for examples and further information.\n *\n * @param keys the keys of the joined object. An input will be created per key.\n *\n */\nexport function join(...keys: string[]) { return new Join(keys); }\n\n/**\n *\n * Creates a [join](https://connective.dev/join) agent that does not pop\n * the fork tag upon joining.\n * [Checkout the docs](https://connective.dev/docs/join) for examples and further information.\n *\n * @param keys the keys of the joined object. An input will be created per key.\n */\nexport function peekJoin(...keys: string[]) { return new Join(keys, false); }\n\n\nexport default join;\n"]}