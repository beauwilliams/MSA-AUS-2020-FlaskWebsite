{"version":3,"file":"handle-error.js","sourceRoot":"","sources":["../../../src/agent/handle-error.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAEnD,OAAO,QAAQ,MAAM,oBAAoB,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAGlE,OAAO,GAAG,MAAM,YAAY,CAAC;AAC7B,OAAO,KAAK,MAAM,cAAc,CAAC;AACjC,OAAO,MAAkB,MAAM,eAAe,CAAC;AAC/C,OAAO,IAAI,MAAM,aAAa,CAAC;AAC/B,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEtC,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAGhC;;;;GAIG;AACH,MAAM,OAAO,WAAY,SAAQ,KAAK;IAIpC;QACE,KAAK,CAAC;YACJ,MAAM,EAAE,CAAC,OAAO,CAAC;YACjB,OAAO,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;SAC7B,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,MAAM,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAC7B,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YAChB,IAAI,eAAe,CAAC,KAAK,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;gBAExD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,EACF,KAAK,EAAE,EACP,KAAK,EAAE,CACR,CAAC,CAAC;IACL,CAAC;IAES,YAAY,CAAC,KAAa;QAClC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,KAAK,IAAI,OAAO;YAClB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;;YAE1D,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAES,aAAa,KAAK,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;IACvC,WAAW,KAAK,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAE,CAAA,CAAC,CAAC;IAEtD,KAAK;QACV,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACH,IAAW,KAAK,KAAK,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAE/C;;;;;OAKG;IACH,IAAW,MAAM,KAAK,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAElD;;;;;OAKG;IACH,IAAW,KAAK,KAAK,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;CACjD;AAGD;;;;;;;GAOG;AACH,MAAM,UAAU,WAAW,KAAK,OAAO,IAAI,WAAW,EAAE,CAAC,CAAC,CAAC;AAG3D,eAAe,WAAW,CAAC","sourcesContent":["import { retry, tap, share } from 'rxjs/operators';\n\nimport emission from '../shared/emission';\nimport { isEmissionError } from '../shared/errors/emission-error';\n\nimport { PinLike } from '../pin/pin-like';\nimport pin from '../pin/pin';\nimport group from '../pin/group';\nimport source, { Source } from '../pin/source';\nimport pipe from '../pin/pipe';\nimport { block } from '../pin/filter';\n\nimport { Agent } from './agent';\n\n\n/**\n *\n * Represents [handle error](https://connective.dev/docs/handle-error) agents.\n *\n */\nexport class HandleError extends Agent {\n  private _err: Source;\n  private _gate: PinLike;\n\n  constructor() {\n    super({\n      inputs: ['input'],\n      outputs: ['output', 'error'],\n    });\n\n    this._err = source();\n    this._gate = this.input.to(pipe(\n      tap(null, error => {\n        if (isEmissionError(error))\n          this._err.emit(emission(error, error.emission.context));\n        else\n          this._err.send(error);\n      }),\n      retry(),\n      share(),\n    ));\n  }\n\n  protected createOutput(label: string) {\n    this.checkOutput(label);\n    if (label == 'error')\n      return group(this._err, this._gate.to(block())).to(pin());\n    else\n      return this._gate;\n  }\n\n  protected createEntries() { return [this.input] }\n  protected createExits() { return [this.output, this.error ] }\n\n  public clear() {\n    this._err.clear();\n    return super.clear();\n  }\n\n  /**\n   *\n   * Shortcut for `.in('input')`, the input pin receiving values.\n   * [Read this](https://connective.dev/docs/handle-error#signature) for more details.\n   *\n   */\n  public get input() { return this.in('input'); }\n\n  /**\n   *\n   * Shortcut for `.out('output')`, which will emit error-free values.\n   * [Read this](https://connective.dev/docs/handle-error#signature) for more details.\n   *\n   */\n  public get output() { return this.out('output'); }\n\n  /**\n   *\n   * Shortcut for `.out('error')`, which will emit errors.\n   * [Read this](https://connective.dev/docs/handle-error#signature) for more details.\n   *\n   */\n  public get error() { return this.out('error'); }\n}\n\n\n/**\n *\n * Creates a [handle error](https://connective.dev/docs/handle-error) agent.\n * Handle error agents will pass on incoming values, but also will catch errors\n * occuring upstream and pass them along, stopping the flow from closing in resposne to such errors.\n * [Checkout the docs](https://connective.dev/docs/handle-error) for examples and further information.\n *\n */\nexport function handleError() { return new HandleError(); }\n\n\nexport default handleError;\n"]}