{"version":3,"file":"bindable.js","sourceRoot":"","sources":["../../../src/shared/bindable.ts"],"names":[],"mappings":"AAWA;;;;;;;;GAQG;AACH,MAAM,UAAU,UAAU,CAAC,QAAa;IACtC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,UAAU,CAAC;AAClE,CAAC","sourcesContent":["/**\n *\n * Denotes that this object can (and perhaps should be) bound at some point,\n * using its `.bind()` method.\n *\n */\nexport interface Bindable {\n  bind(): any;\n}\n\n\n/**\n *\n * Checks if given object matches [Bindable](https://connective.dev/docs/interfaces#bindable) interface.\n * Basically checks if `.bind()` method exists.\n *\n * @param whatever\n * @return `true` if `any` is `Bindable`\n *\n */\nexport function isBindable(whatever: any): whatever is Bindable {\n  return !!(whatever.bind) && typeof whatever.bind === 'function';\n}"]}