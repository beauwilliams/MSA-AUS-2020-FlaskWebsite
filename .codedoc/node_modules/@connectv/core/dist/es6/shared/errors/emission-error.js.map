{"version":3,"file":"emission-error.js","sourceRoot":"","sources":["../../../../src/shared/errors/emission-error.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAGvC;;;;;;GAMG;AACH,MAAM,OAAO,aAAc,SAAQ,KAAK;IAGtC,YAAY,QAAwB,EAAW,QAAkB;QAC/D,KAAK,CAAC,QAAQ,YAAY,KAAK,CAAA,CAAC,CAAA,QAAQ,CAAC,OAAO,CAAA,CAAC,CAAA,QAAQ,CAAC,CAAC;QADd,aAAQ,GAAR,QAAQ,CAAU;QAE/D,IAAI,QAAQ,YAAY,KAAK;YAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;YACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,IAAW,OAAO,KAAa,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IAC9D,IAAW,KAAK,KAAyB,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;CACvE;AAGD;;;;;GAKG;AACH,MAAM,UAAU,eAAe,CAAC,GAAQ;IACtC,OAAO,GAAG,YAAY,KAAK;QACpB,GAAW,CAAC,QAAQ,YAAY,KAAK;QACrC,GAAW,CAAC,QAAQ,YAAY,QAAQ,CAAC;AAClD,CAAC","sourcesContent":["import { Emission } from '../emission';\n\n\n/**\n *\n * Represents when an error has occured during handling an emission.\n * You can retrieve the emission that resulted in the error via `.emission` property,\n * and you can retrieve the original error via `.original` property.\n *\n */\nexport class EmissionError extends Error {\n  readonly original: Error;\n\n  constructor(original: Error | string, readonly emission: Emission) {\n    super(original instanceof Error?original.message:original);\n    if (original instanceof Error) this.original = original;\n    else this.original = new Error(original);\n  }\n\n  public get message(): string { return this.original.message; }\n  public get stack(): string | undefined { return this.original.stack; }\n}\n\n\n/**\n *\n * Checks if an object is an `EmissionError` (this is needed due to some issues\n * with Typescript's typechecking on Errors).\n *\n */\nexport function isEmissionError(err: any): err is EmissionError {\n  return err instanceof Error &&\n        (err as any).original instanceof Error &&\n        (err as any).emission instanceof Emission;\n}\n"]}