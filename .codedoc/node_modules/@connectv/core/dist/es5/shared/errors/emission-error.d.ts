import { Emission } from '../emission';
/**
 *
 * Represents when an error has occured during handling an emission.
 * You can retrieve the emission that resulted in the error via `.emission` property,
 * and you can retrieve the original error via `.original` property.
 *
 */
export declare class EmissionError extends Error {
    readonly emission: Emission;
    readonly original: Error;
    constructor(original: Error | string, emission: Emission);
    get message(): string;
    get stack(): string | undefined;
}
/**
 *
 * Checks if an object is an `EmissionError` (this is needed due to some issues
 * with Typescript's typechecking on Errors).
 *
 */
export declare function isEmissionError(err: any): err is EmissionError;
