import { Observable } from 'rxjs';
import { Emission } from '../shared/emission';
import { PinLike } from './pin-like';
import { BasePin } from './base';
/**
 *
 * Represents [wrap](https://connective.dev/docs/wrap) pins.
 *
 */
declare class Wrapper extends BasePin {
    readonly observable: Observable<Emission>;
    constructor(observable: Observable<any>);
    connect(_: PinLike): this;
}
/**
 *
 * Creates a [wrap](https://connective.dev/docs/wrap) pin. A wrap pin
 * wraps a given observable so that it can be connected to other pins. Because
 * its observable is already realized, you cannot connect other pins to a wrap pin.
 * [Checkout the docs](https://connective.dev/docs/wrap) for examples and further information.
 *
 * @param observable
 *
 */
export declare function wrap(observable: Observable<any>): Wrapper;
export default wrap;
