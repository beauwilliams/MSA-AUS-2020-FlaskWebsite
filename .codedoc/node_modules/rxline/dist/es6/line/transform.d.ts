import { Observable } from 'rxjs';
export declare type Function<I, O> = (i: I) => O | Promise<O> | Observable<O>;
export declare type Function$<I, O> = (i: I) => Observable<O>;
export declare class Transform<I, O> {
    readonly op$: Function$<I, O>;
    constructor(_op$: Function<I, O>);
    combine<X>(transform: Transform<O, X> | Function<O, X>): Transform<I, X>;
    apply(i: I): Observable<O>;
}
export declare function identity<I>(): Transform<I, I>;
export declare function transform<I, O>(func: Function<I, O>): Transform<I, O>;
