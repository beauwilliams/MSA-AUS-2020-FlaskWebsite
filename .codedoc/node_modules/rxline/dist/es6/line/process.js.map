{"version":3,"file":"process.js","sourceRoot":"","sources":["../../../src/line/process.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAQrD,MAAM,UAAU,YAAY,CAAO,QAAuB,EAAE,SAA0B;IACpF,OAAO,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,YAAY,CAAO,QAAuB,EAAE,SAA0B;IACpF,OAAO,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { mergeMap, concatMap } from 'rxjs/operators';\n\nimport { Transform } from './transform';\n\n\nexport type ProcessingStrategy<I, O> = (content$: Observable<I>, transform: Transform<I, O>) => Observable<O>;\n\n\nexport function sequentially<I, O>(content$: Observable<I>, transform: Transform<I, O>) {\n  return content$.pipe(concatMap(transform.op$));\n}\n\nexport function concurrently<I, O>(content$: Observable<I>, transform: Transform<I, O>) {\n  return content$.pipe(mergeMap(transform.op$));\n}\n"]}