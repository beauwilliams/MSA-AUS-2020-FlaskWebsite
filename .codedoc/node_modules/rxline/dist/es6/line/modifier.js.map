{"version":3,"file":"modifier.js","sourceRoot":"","sources":["../../../src/line/modifier.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAMxC,MAAM,OAAO,QAAQ;IACnB,YAAoB,IAA8B;QAA9B,SAAI,GAAJ,IAAI,CAA0B;IAAG,CAAC;IAE/C,MAAM,CAAC,SAA0B;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;CACF;AAkBD,MAAM,UAAU,GAAG,CAAa,IAA8B,IAAI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9F,MAAM,UAAU,IAAI,CAAO,GAA2B;IACpD,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC","sourcesContent":["import { OperatorFunction } from 'rxjs';\n\nimport { Transform } from './transform';\n\n\nexport type ModifierFunc<A, B, C, D> = (t: Transform<A, B>) => Transform<C, D>;\n\n\nexport class Modifier<A, B, C, D> {\n  constructor(private func: ModifierFunc<A, B, C, D>) {}\n\n  public modify(transform: Transform<A, B>): Transform<C, D> {\n    return this.func(transform);\n  }\n}\n\n\nexport interface LinearModifier<I, O> extends Modifier<any, I, any, O> {\n  modify<X>(transform: Transform<X, I>): Transform<X, O>;\n}\n\n\nexport interface IdModVarOutput<I> extends Modifier<I, any, I, any> {\n  modify<O>(transform: Transform<I, O>): Transform<I, O>;\n}\n\n\nexport interface IdModVarInput<O> extends ModifierFunc<any, O, any, O> {\n  modify<I>(transform: Transform<I, O>): Transform<I, O>;\n}\n\n\nexport function mod<A, B, C, D>(func: ModifierFunc<A, B, C, D>) { return new Modifier(func); }\nexport function mod$<I, O>(op$: OperatorFunction<I, O>): LinearModifier<I, O> { \n  return mod(t => new Transform(i => t.apply(i).pipe(op$))); \n}\n"]}