{"version":3,"file":"read-file.js","sourceRoot":"","sources":["../../../src/fs/read-file.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,IAAI,KAAK,EAAE,MAAM,IAAI,CAAC;AACvC,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAI5B,MAAM,UAAU,QAAQ,CAAC,UAAyB,EAAE;IAClD,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;IACjC,OAAO,UAAS,CAA2B;QACzC,IAAI,IAAY,CAAC;QACjB,IAAI,IAAI,GAAW,KAAK,CAAC;QACzB,IAAI,OAAO,CAAC,KAAK,QAAQ;YAAE,IAAI,GAAG,CAAC,CAAC;aAC/B;YACH,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;YACd,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC;SACvB;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACjC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBAC1B,IAAI,GAAG;oBAAE,MAAM,CAAC,GAAG,CAAC,CAAC;;oBAChB,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAA;AACH,CAAC","sourcesContent":["import { readFile as readf } from 'fs';\nimport { join } from 'path';\nimport { File, FileIOOptions } from './types';\n\n\nexport function readFile(options: FileIOOptions = {}) {\n  const _root = options.root || '';\n  return function(f: string | File<undefined>): Promise<File<string>> {\n    let path: string;\n    let root: string = _root;\n    if (typeof f === 'string') path = f;\n    else {\n      path = f.path;\n      root = root || f.root;\n    }\n\n    const abspath = join(root, path);\n    return new Promise((resolve, reject) => {\n      readf(abspath, (err, res) => {\n        if (err) reject(err);\n        else resolve({ path, root, content: res.toString() });\n      });\n    });\n  }\n}\n"]}