import { PathFull, File, FileModificationOptions } from './types';
export declare type ContentMapper<I, O> = (content: I, path: string, root: string) => O | Promise<O>;
export declare function mapContent<I = string, O = string>(map: ContentMapper<I, O>, options?: FileModificationOptions): (f: File<I>) => Promise<File<O>>;
export declare type PathMapper<I> = (path: string, root: string, content: I) => string | Promise<string>;
export declare function mapPath<I>(map: PathMapper<I>, options?: FileModificationOptions): <T extends PathFull>(f: T | File<I>) => Promise<File<I>>;
export declare type RootMapper<I> = <I>(root: string, path: string, content: I) => string | Promise<string>;
export declare function mapRoot<I>(map: RootMapper<I>, options?: FileModificationOptions): (f: File<I>) => Promise<File<I>>;
